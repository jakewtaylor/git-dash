{"version":3,"sources":["hooks/useRememberedState.js","components/ConfigController/ConfigKeys.js","components/ConfigController/useLabels.js","components/ConfigController/useDarkMode.js","components/ConfigController/ConfigController.js","components/ConfigController/useAuth.js","components/ConfigController/useSelectedRepos.js","helpers/mapToGroups.js","Apollo.js","hooks/useTailwind.js","components/Layout.js","components/Layout.styles.js","hooks/queries/useUserRepos.js","components/RepoList.js","components/RepoList.styles.js","components/RepoPicker.js","components/RepoPicker.styles.js","components/TokenGate.js","components/TokenGate.styles.js","components/PullRequests/StatusIcon.js","components/PullRequests/StatusIcon.styles.js","hooks/useContrastingColor.js","hooks/useOnClickOutside.js","components/PullRequests/Label.js","components/PullRequests/Label.styles.js","components/PullRequests/Labels.js","components/PullRequests/Labels.styles.js","components/PullRequests/PullRequest.js","components/PullRequests/PullRequest.styles.js","hooks/queries/usePullRequests.js","components/PullRequests/PullRequests.js","components/PullRequests/PullRequests.styles.js","components/LabelFilters.js","components/LabelFilters.styles.js","components/DarkModeToggle.js","components/DarkModeToggle.styles.js","index.js","App.js"],"names":["loadState","key","initial","str","stored","localStorage","getItem","JSON","parse","saveState","value","setItem","obj","stringify","useRememberedState","name","useRef","useState","current","state","setState","useEffect","ConfigKeys","FilterModes","useDarkMode","window","matchMedia","matches","isDarkMode","setIsDarkMode","document","documentElement","classList","add","remove","useMemo","toggleDarkMode","v","ConfigContext","createContext","useConfig","useContext","ConfigController","children","auth","token","setToken","useAuth","selectedRepos","repos","setRepos","groupedRepos","keyGetter","repo","owner","login","reduce","acc","item","index","push","repoKeys","map","nameWithOwner","containsRepo","includes","addRepo","rs","removeRepo","filter","r","useSelectedRepos","labels","BLACKLIST","WHITELIST","filterEnabled","setFilterEnabled","filterMode","setFilterMode","whitelist","setWhitelist","blacklist","setBlacklist","filterList","toggleFilter","toggleFilterMode","f","addToWhitelist","label","wl","clearWhitelist","removeFromWhitelist","l","addToBlacklist","bl","clearBlacklist","removeFromBlacklist","useLabels","darkMode","config","Provider","Apollo","cache","InMemoryCache","link","HttpLink","uri","headers","authorization","client","ApolloClient","useTailwind","styleSheet","Object","entries","styles","Array","isArray","join","Layout","container","className","USER_REPOS","gql","RepoList","onRepoClick","removable","imageContainer","removeOverlay","removeIcon","image","text","TransitionGroup","CSSTransition","timeout","classNames","onClick","src","avatarUrl","alt","RepoPicker","onChoose","useQuery","data","rest","viewer","repositories","nodes","useUserRepos","loading","error","e","preventDefault","length","TokenGate","form","input","button","href","target","rel","onSubmit","type","onChange","placeholder","StatusIcon","status","icon","Icon","COMMENTED","ChatBubbleRoundedIcon","CHANGES_REQUESTED","RateReviewRoundedIcon","APPROVED","CheckRoundedIcon","PENDING","AccessTimeRoundedIcon","bgClass","textClass","style","right","bottom","fontSize","getContrastingColor","color","hex","fullHex","replace","m","g","b","exec","n","parseInt","hexToRgb","Math","round","useOnClickOutside","ref","handler","refsOrRef","els","HTMLElement","handleClick","some","el","contains","addEventListener","removeEventListener","Label","buttons","tag","tooltipWrapper","tooltip","showTooltip","setShowTooltip","useCallback","disabled","background","transform","display","Labels","PullRequest","pullRequest","preTitle","ownerAvatar","titleBar","title","author","authorAvatar","authorName","timestamps","reviewers","review","reviewerAvatar","reviewStatus","created","format","parseISO","createdAt","updated","updatedAt","id","repository","permalink","reviews","GET_PULL_REQUESTS","PullRequests","pullRequests","limit","query","variables","pollInterval","search","usePullRequests","repoQuery","labelQuery","LabelFilters","selected","selectedLabel","button2","listEmpty","toLowerCase","DarkModeToggle","switch","knob","knobInactive","knobActive","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.34efc4d2.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nconst serialize = obj => JSON.stringify(obj);\nconst deserialze = str => JSON.parse(str);\n\nconst loadState = (key, initial) => {\n  const stored = localStorage.getItem(key);\n\n  return stored ? deserialze(stored) : initial;\n};\n\nconst saveState = (key, value) => localStorage.setItem(key, serialize(value));\n\nexport const useRememberedState = (name, initial) => {\n  const key = useRef(name);\n\n  const [state, setState] = useState(() => loadState(key.current, initial));\n\n  useEffect(() => {\n    saveState(key.current, state);\n  }, [state]);\n\n  return [state, setState];\n};\n","export const ConfigKeys = {\n  AUTH: 'AUTH',\n  SELECTED_REPOS: 'SELECTED_REPOS',\n  LABEL_WHITELIST: 'LABEL_WHITELIST',\n  LABEL_BLACKLIST: 'LABEL_BLACKLIST',\n  LABEL_FILTER_ENABLED: 'LABEL_FILTER_ENABLED',\n  LABEL_FILTER_MODE: 'LABEL_FILTER_MODE',\n  DARK_MODE: 'DARK_MODE',\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo } from 'react';\n\nexport const FilterModes = {\n  WHITELIST: 'WHITELIST',\n  BLACKLIST: 'BLACKLIST',\n};\n\nexport const useLabels = () => {\n  const { BLACKLIST, WHITELIST } = FilterModes;\n  const [filterEnabled, setFilterEnabled] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_ENABLED,\n    false,\n  );\n\n  const [filterMode, setFilterMode] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_MODE,\n    BLACKLIST,\n  );\n\n  const [whitelist, setWhitelist] = useRememberedState(\n    ConfigKeys.LABEL_WHITELIST,\n    [],\n  );\n\n  const [blacklist, setBlacklist] = useRememberedState(\n    ConfigKeys.LABEL_BLACKLIST,\n    [],\n  );\n\n  return useMemo(\n    () => ({\n      whitelist,\n      blacklist,\n      filterMode,\n      filterList: filterMode === WHITELIST ? whitelist : blacklist,\n      filterEnabled,\n\n      toggleFilter() {\n        setFilterEnabled(v => !v);\n      },\n\n      toggleFilterMode() {\n        setFilterMode(f => (f === WHITELIST ? BLACKLIST : WHITELIST));\n      },\n\n      addToWhitelist(label) {\n        setWhitelist(wl => [...wl, label]);\n      },\n\n      clearWhitelist() {\n        setWhitelist([]);\n      },\n\n      removeFromWhitelist(label) {\n        setWhitelist(wl => wl.filter(l => l.name !== label.name));\n      },\n\n      addToBlacklist(label) {\n        setBlacklist(bl => [...bl, label]);\n      },\n\n      clearBlacklist() {\n        setBlacklist([]);\n      },\n\n      removeFromBlacklist(label) {\n        setBlacklist(bl => bl.filter(l => l.name !== label.name));\n      },\n    }),\n    [\n      whitelist,\n      blacklist,\n      setWhitelist,\n      setBlacklist,\n      filterMode,\n      setFilterMode,\n      filterEnabled,\n      setFilterEnabled,\n      BLACKLIST,\n      WHITELIST,\n    ],\n  );\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo, useEffect } from 'react';\n\nconst userPrefersDarkMode = () => {\n  return (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n};\n\nexport const useDarkMode = () => {\n  const [isDarkMode, setIsDarkMode] = useRememberedState(\n    ConfigKeys.DARK_MODE,\n    userPrefersDarkMode(),\n  );\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('mode-dark');\n    } else {\n      document.documentElement.classList.remove('mode-dark');\n    }\n  }, [isDarkMode]);\n\n  return useMemo(\n    () => ({\n      isDarkMode,\n      toggleDarkMode() {\n        setIsDarkMode(v => !v);\n      },\n    }),\n    [isDarkMode, setIsDarkMode],\n  );\n};\n","import React, { createContext, useContext, useMemo } from 'react';\nimport { useSelectedRepos } from './useSelectedRepos';\nimport { useAuth } from './useAuth';\nimport { useLabels } from './useLabels';\nimport { useDarkMode } from './useDarkMode';\n\nconst ConfigContext = createContext();\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const ConfigController = ({ children }) => {\n  const auth = useAuth();\n  const selectedRepos = useSelectedRepos();\n  const labels = useLabels();\n  const darkMode = useDarkMode();\n\n  const config = useMemo(() => ({ auth, selectedRepos, labels, darkMode }), [\n    auth,\n    selectedRepos,\n    labels,\n    darkMode,\n  ]);\n\n  return (\n    <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n  );\n};\n","import { ConfigKeys } from './ConfigKeys';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { useMemo } from 'react';\n\nexport const useAuth = () => {\n  const [token, setToken] = useRememberedState(ConfigKeys.AUTH, '');\n\n  return useMemo(\n    () => ({\n      token,\n      setToken,\n    }),\n    [token, setToken],\n  );\n};\n","import { useMemo } from 'react';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { mapToGroups } from '../../helpers/mapToGroups';\n\nexport const useSelectedRepos = () => {\n  const [repos, setRepos] = useRememberedState(ConfigKeys.SELECTED_REPOS, []);\n\n  const groupedRepos = useMemo(\n    () => mapToGroups(repos, repo => repo.owner.login),\n    [repos],\n  );\n\n  const repoKeys = useMemo(() => repos.map(repo => repo.nameWithOwner), [\n    repos,\n  ]);\n\n  return useMemo(\n    () => ({\n      repos,\n      groupedRepos,\n      repoKeys,\n\n      containsRepo(repo) {\n        return repoKeys.includes(repo.nameWithOwner);\n      },\n\n      addRepo(repo) {\n        setRepos(rs => [...rs, repo]);\n      },\n\n      removeRepo(repo) {\n        setRepos(rs => rs.filter(r => r.nameWithOwner !== repo.nameWithOwner));\n      },\n    }),\n    [repos, groupedRepos, repoKeys, setRepos],\n  );\n};\n","export const mapToGroups = (arr, keyGetter) =>\n  arr.reduce((acc, item, index) => {\n    const key = keyGetter(item, index);\n\n    if (acc[key]) {\n      acc[key].push(item);\n    } else {\n      acc[key] = [item];\n    }\n\n    return acc;\n  }, {});\n","import React, { useMemo } from 'react';\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useConfig } from './components/ConfigController/ConfigController';\n\nexport const Apollo = ({ children }) => {\n  const {\n    auth: { token },\n  } = useConfig();\n\n  const cache = useMemo(() => new InMemoryCache(), []);\n  const link = useMemo(\n    () =>\n      new HttpLink({\n        uri: 'https://api.github.com/graphql',\n        headers: {\n          authorization: `bearer ${token}`,\n        },\n      }),\n    [token],\n  );\n\n  const client = useMemo(() => new ApolloClient({ link, cache }), [\n    link,\n    cache,\n  ]);\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n","import { useMemo } from 'react';\n\nexport const useTailwind = styleSheet => {\n  return useMemo(() => {\n    return Object.entries(styleSheet).reduce((acc, [key, styles]) => {\n      acc[key] = Array.isArray(styles) ? styles.join(' ') : styles;\n\n      return acc;\n    }, {});\n  }, [styleSheet]);\n};\n","import React from 'react';\nimport { useStyles } from './Layout.styles';\n\nexport const Layout = ({ children }) => {\n  const styles = useStyles();\n\n  return <div className={styles.container}>{children}</div>;\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n      px-8 max-w-5xl mx-auto h-full\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst USER_REPOS = gql`\n  {\n    viewer {\n      repositories(\n        first: 12\n        affiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        ownerAffiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        orderBy: { field: UPDATED_AT, direction: DESC }\n      ) {\n        nodes {\n          name\n          nameWithOwner\n          owner {\n            login\n            avatarUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useUserRepos = () => {\n  const { data, ...rest } = useQuery(USER_REPOS);\n\n  return {\n    data,\n    repos: data ? data.viewer.repositories.nodes : null,\n    ...rest,\n  };\n};\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useStyles } from './RepoList.styles';\n\nimport './RepoList.css';\n\nexport const RepoList = ({ repos, onRepoClick = null, removable = false }) => {\n  const styles = useStyles();\n\n  return (\n    <TransitionGroup className={styles.repos}>\n      {repos.map(repo => (\n        <CSSTransition key={repo.nameWithOwner} timeout={200} classNames=\"item\">\n          <button\n            className={styles.repo}\n            onClick={onRepoClick ? onRepoClick(repo) : null}\n          >\n            <div className={styles.imageContainer}>\n              <img\n                src={repo.owner.avatarUrl}\n                className={styles.image}\n                alt={repo.nameWithOwner}\n              />\n\n              {removable ? (\n                <div className={styles.removeOverlay}>\n                  <p className={styles.removeIcon}>✕</p>\n                </div>\n              ) : null}\n            </div>\n            <p className={styles.text}>{repo.nameWithOwner}</p>\n          </button>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    repos: `\n        flex flex-row items-center justify-center flex-wrap mb-4\n    `,\n\n    repo: `\n        bg-gray-400 dark:bg-gray-800\n        focus:bg-purple-300 dark-focus:bg-purple-800\n        text-gray-800 dark:text-gray-400\n        focus:text-purple-800 dark-focus:text-purple-300\n        inline-block whitespace-no-wrap\n        m-1 rounded-full p-1 pr-3\n        flex flex-row items-center\n\n        hover:bg-gray-500\n        focus:outline-none\n    `,\n\n    imageContainer: `\n        relative mr-2 rounded-full overflow-hidden\n    `,\n\n    removeOverlay: `\n        absolute top-0 bottom-0 right-0 left-0\n        bg-gray-600\n        flex items-center justify-center\n        opacity-75\n    `,\n\n    removeIcon: 'text-gray-200 text-xs leading-none',\n\n    image: `\n        w-6 h-6\n    `,\n\n    text: `\n        text-sm leading-none font-semibold\n    `,\n  });\n","import React from 'react';\nimport { useUserRepos } from '../hooks/queries/useUserRepos';\n\nimport { useConfig } from './ConfigController/ConfigController';\nimport { RepoList } from './RepoList';\nimport { useStyles } from './RepoPicker.styles';\n\nexport const RepoPicker = ({ onChoose }) => {\n  const { loading, repos, error } = useUserRepos();\n  const { selectedRepos } = useConfig();\n  const styles = useStyles();\n\n  const handleChoose = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.addRepo(repo);\n  };\n\n  const removeRepo = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.removeRepo(repo);\n  };\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Get started by picking some repos you want to see:\n      </p>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>something went wrong...</p>\n      ) : (\n        <>\n          <RepoList\n            repos={repos.filter(r => !selectedRepos.containsRepo(r))}\n            onRepoClick={handleChoose}\n          />\n\n          {selectedRepos.repos.length > 0 ? (\n            <>\n              <p className={styles.text}>Selected:</p>\n              <RepoList\n                repos={selectedRepos.repos}\n                onRepoClick={removeRepo}\n                removable\n              />\n            </>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n      pt-4\n    `,\n    text: `\n        mb-2 text-gray-900 dark:text-gray-500 font-light\n    `,\n  });\n","import React, { useState } from 'react';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './TokenGate.styles';\n\nexport const TokenGate = ({ children }) => {\n  const { auth } = useConfig();\n  const styles = useStyles();\n\n  const [token, setToken] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    auth.setToken(token);\n  };\n\n  return auth.token ? (\n    children\n  ) : (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Welcome! Before you can get started, you need to supply us with a\n        Personal Access Token so we can see your repositories.\n        <br />\n        <a\n          href=\"https://github.com/settings/tokens/new?scopes=repo&description=git-dash\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={styles.link}\n        >\n          Click here to generate one on Github.\n        </a>\n      </p>\n\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          value={token}\n          onChange={e => setToken(e.target.value)}\n          placeholder=\"Paste PAT Here\"\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.button}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-col items-center justify-center h-full\n    `,\n\n    text: `\n        text-center max-w-md\n        text-gray-800 mb-4\n    `,\n\n    link: `\n        text-purple-600 font-semibold\n    `,\n\n    form: `\n        shadow-lg rounded\n    `,\n\n    input: `\n        w-56 h-12 px-4 rounded-l\n        border border-gray-400 border-r-0\n        focus:outline-none\n        focus:border-purple-600\n    `,\n\n    button: `\n        h-12 px-4 bg-purple-600 text-purple-100 rounded-r\n        border border-purple-800 border-l-0\n    `,\n  });\n","import React from 'react';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport RateReviewRoundedIcon from '@material-ui/icons/RateReviewRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport { useStyles } from './StatusIcon.styles';\n\nexport const StatusIcon = ({ status, ...props }) => {\n  const styles = useStyles();\n  const Icon = {\n    COMMENTED: ChatBubbleRoundedIcon,\n    CHANGES_REQUESTED: RateReviewRoundedIcon,\n    APPROVED: CheckRoundedIcon,\n    PENDING: AccessTimeRoundedIcon,\n  }[status];\n\n  const bgClass = {\n    COMMENTED: `bg-white`,\n    CHANGES_REQUESTED: `bg-red-500`,\n    APPROVED: `bg-green-600`,\n    PENDING: `bg-yellow-500`,\n  }[status];\n\n  const textClass = {\n    COMMENTED: `text-gray-600`,\n    CHANGES_REQUESTED: `text-red-100`,\n    APPROVED: `text-green-100`,\n    PENDING: `text-yellow-900`,\n  }[status];\n\n  return (\n    <div\n      className={`${bgClass} ${textClass} ${styles.container}`}\n      style={{ right: '-.75rem', bottom: '-.75rem' }}\n    >\n      <Icon className={styles.icon} fontSize=\"inherit\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        w-8 h-8 absolute\n        flex items-center justify-center\n        rounded-full shadow\n    `,\n\n    icon: `\n        leading-none font-xs\n    `,\n  });\n","import { useMemo } from 'react';\n\nconst hexToRgb = hex => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const fullHex = hex.replace(shorthandRegex, (m, r, g, b) =>\n    [r, r, g, g, b, b].join(''),\n  );\n\n  const [, r, g, b] = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHex);\n\n  return [r, g, b].map(n => parseInt(n, 16));\n};\n\nexport const getContrastingColor = color => {\n  const [r, g, b] = hexToRgb(color);\n\n  const o = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n  return o > 125 ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.9)';\n};\n\nexport const useContrastingColor = color =>\n  useMemo(() => {\n    return getContrastingColor(color);\n  }, [color]);\n","import { useEffect } from 'react';\n\n// converts a single ref, element or array into\n// an array of corresponding elements\nconst toEls = refsOrRef => {\n  const refs = Array.isArray(refsOrRef) ? refsOrRef : [refsOrRef];\n\n  const toEl = ref => (ref instanceof HTMLElement || !ref ? ref : ref.current);\n\n  return refs.map(toEl);\n};\n\n// `ref` is either a single ref, element or an array of either\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const els = toEls(ref);\n\n    const handleClick = e => {\n      const contained = els.some(el => {\n        return el && el.contains(e.target);\n      });\n\n      if (!contained) {\n        handler(e);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [ref, handler]);\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getContrastingColor } from '../../hooks/useContrastingColor';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useStyles } from './Label.styles';\n\nexport const Label = ({ label, buttons = null }) => {\n  const styles = useStyles();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltip = useRef();\n\n  useOnClickOutside(\n    tooltip,\n    useCallback(() => {\n      setShowTooltip(false);\n    }, []),\n  );\n\n  return (\n    <div className={styles.container}>\n      <button\n        onClick={() => setShowTooltip(true)}\n        disabled={!buttons}\n        className={styles.tag}\n        style={{\n          background: `#${label.color}`,\n          color: getContrastingColor(label.color),\n        }}\n      >\n        {label.name}\n      </button>\n\n      <div\n        ref={tooltip}\n        className={styles.tooltipWrapper}\n        style={{\n          transform: 'translateX(-50%)',\n          display: showTooltip && buttons ? 'block' : 'none',\n        }}\n      >\n        {buttons ? (\n          <div className={styles.tooltip}>\n            {buttons({\n              className: styles.button,\n              label,\n            })}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        relative mr-1\n    `,\n\n    tag: `\n        leading-none text-xs px-2 py-1\n        rounded-full font-semibold\n        shadow-inner\n        focus:outline-none\n        focus:opacity-75\n        hover:shadow\n    `,\n\n    tooltipWrapper: `\n        absolute bottom-full left-1/2 pb-1\n    `,\n\n    tooltip: `\n        bg-white rounded border border-gray-300\n        shadow-lg py-1 min-w-48 flex flex-col items-stretch\n    `,\n\n    button: `\n        lowercase whitespace-no-wrap\n        leading-none px-4 py-2 text-sm text-gray-700\n        hover:bg-purple-300 hover:text-purple-800\n        focus:outline-none\n        focus:bg-gray-200\n    `,\n  });\n","import React from 'react';\nimport { useStyles } from './Labels.styles';\nimport { Label } from './Label';\n\nexport const Labels = ({ labels, buttons = null }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      {labels.map(label => (\n        <Label key={label.name} label={label} buttons={buttons} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center\n    `,\n  });\n","import React from 'react';\nimport { parseISO, format } from 'date-fns';\nimport { useStyles } from './PullRequest.styles';\nimport { StatusIcon } from './StatusIcon';\nimport { Labels } from './Labels';\nimport { useConfig } from '../ConfigController/ConfigController';\n\nexport const PullRequest = ({ pullRequest }) => {\n  const styles = useStyles();\n  const { labels } = useConfig();\n\n  const created = format(parseISO(pullRequest.createdAt), 'do MMM HH:mm');\n  const updated = format(parseISO(pullRequest.updatedAt), 'do MMM HH:mm');\n\n  return (\n    <div className={styles.pullRequest} key={pullRequest.id}>\n      <div className={styles.titleBar}>\n        <div>\n          <div className={styles.preTitle}>\n            <div className={styles.owner}>\n              <img\n                src={pullRequest.repository.owner.avatarUrl}\n                alt={pullRequest.repository.nameWithOwner}\n                className={styles.ownerAvatar}\n              />\n              <p className={styles.repo}>\n                {pullRequest.repository.nameWithOwner}\n              </p>\n            </div>\n\n            <Labels\n              labels={pullRequest.labels.nodes}\n              buttons={({ className, label }) => (\n                <>\n                  <button\n                    className={className}\n                    onClick={() => labels.addToWhitelist(label)}\n                  >\n                    add to whitelist\n                  </button>\n                  <button\n                    className={className}\n                    onClick={() => labels.addToBlacklist(label)}\n                  >\n                    add to blacklist\n                  </button>\n                </>\n              )}\n            />\n          </div>\n          <a\n            className={styles.title}\n            href={pullRequest.permalink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {pullRequest.title}\n          </a>\n        </div>\n\n        <div className={styles.author}>\n          <img\n            src={pullRequest.author.avatarUrl}\n            alt={pullRequest.author.login}\n            className={styles.authorAvatar}\n          />\n          <p className={styles.authorName}>{pullRequest.author.login}</p>\n        </div>\n      </div>\n\n      <p className={styles.timestamps}>\n        created {created}, last updated {updated}\n      </p>\n\n      <div className={styles.reviewers}>\n        {pullRequest.reviews.nodes\n          .filter(review => review.state !== 'COMMENTED')\n          .map(review => (\n            <div\n              className={styles.review}\n              key={review.id}\n              title={`Created ${format(\n                parseISO(review.createdAt),\n                'do MMM HH:mm',\n              )}`}\n            >\n              <img\n                src={review.author.avatarUrl}\n                alt={review.author.login}\n                className={styles.reviewerAvatar}\n              />\n              <StatusIcon status={review.state} />\n            </div>\n          ))}\n      </div>\n\n      {/* <pullRequeste>{JSON.stringify(pullRequest, null, 2)}</pullRequeste> */}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequest: `\n        p-6\n        border-b border-gray-300 dark:border-gray-750\n        last:border-b-0\n    `,\n\n    preTitle: `\n        flex flex-row items-center mb-1\n    `,\n\n    owner: `\n        flex flex-row items-center\n    `,\n\n    ownerAvatar: `\n        w-6 h-6 rounded-full shadow mr-1\n    `,\n\n    repo: `\n        text-base text-gray-800 dark:text-gray-500 leading-none mr-2\n    `,\n\n    titleBar: `\n        flex flex-row justify-between items-center mb-1\n    `,\n\n    title: `\n        text-gray-900 font-semibold text-lg\n        dark:text-gray-300\n        block p-1 -mx-1\n    `,\n\n    author: `\n        inline-flex flex-row items-center\n        relative\n        bg-gray-400 dark:bg-gray-850\n        rounded-full py-2 pl-3 pr-12\n        shadow-inner\n    `,\n\n    authorAvatar: `\n        w-10 h-10 rounded-full\n        absolute right-0\n        shadow\n    `,\n\n    authorName: `\n        text-sm leading-none whitespace-no-wrap\n        text-gray-900 dark:text-gray-400\n    `,\n\n    timestamps: `\n        text-sm leading-none text-gray-700 dark:text-gray-500\n        pointer-events-none\n    `,\n\n    reviewers: `\n        flex flex-row mt-3\n    `,\n\n    review: `\n        relative mr-4\n    `,\n\n    reviewerAvatar: `\n        w-10 h-10 rounded-full\n        shadow\n    `,\n\n    reviewStatus: `\n        absolute\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_PULL_REQUESTS = gql`\n  query PullRequests($query: String!, $limit: Int!) {\n    search(query: $query, type: ISSUE, last: $limit) {\n      nodes {\n        ... on PullRequest {\n          id\n          title\n          createdAt\n          updatedAt\n          permalink\n          author {\n            login\n            avatarUrl\n          }\n          repository {\n            nameWithOwner\n            owner {\n              avatarUrl\n            }\n          }\n          labels(first: 15) {\n            nodes {\n              name\n              color\n            }\n          }\n          reviews(last: 100) {\n            nodes {\n              id\n              createdAt\n              state\n              author {\n                login\n                avatarUrl\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const usePullRequests = (query, limit) => {\n  const { data, ...rest } = useQuery(GET_PULL_REQUESTS, {\n    variables: { query, limit },\n    pollInterval: 30000,\n  });\n\n  return {\n    data,\n    pullRequests: data ? data.search.nodes : null,\n    ...rest,\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { FilterModes } from '../ConfigController/useLabels';\nimport { PullRequest } from './PullRequest';\nimport { useStyles } from './PullRequests.styles';\nimport { usePullRequests } from '../../hooks/queries/usePullRequests';\n\nexport const PullRequests = () => {\n  const { selectedRepos, labels } = useConfig();\n  const styles = useStyles();\n\n  const limit = selectedRepos.repos.length < 1 ? 10 : 100;\n\n  const query = useMemo(() => {\n    const repoQuery = selectedRepos.repos\n      .map(r => `repo:${r.nameWithOwner}`)\n      .join(' ');\n\n    const labelQuery = labels.filterEnabled\n      ? labels.filterMode === FilterModes.BLACKLIST\n        ? labels.blacklist.map(label => `-label:\"${label.name}\"`).join(' ')\n        : labels.whitelist.map(label => `label:\"${label.name}\"`).join(' ')\n      : '';\n\n    return `is:pr is:open ${repoQuery} ${labelQuery}`;\n  }, [selectedRepos.repos, labels]);\n\n  const { loading, error, pullRequests } = usePullRequests(query, limit);\n\n  return loading ? (\n    <p>Loading...</p>\n  ) : error ? (\n    <p>Something went wrong...</p>\n  ) : (\n    <div className={styles.pullRequests}>\n      {pullRequests.map(pullRequest => (\n        <PullRequest pullRequest={pullRequest} key={pullRequest.id} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequests: `\n        bg-gray-100 dark:bg-gray-800\n        border-gray-300 dark:border-gray-750\n        mb-4 shadow-sm rounded border\n    `,\n  });\n","import React from 'react';\nimport { Labels } from './PullRequests/Labels';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './LabelFilters.styles';\nimport { FilterModes } from './ConfigController/useLabels';\n\nexport const LabelFilters = () => {\n  const { labels } = useConfig();\n  const {\n    filterMode,\n    filterList,\n    removeFromWhitelist,\n    removeFromBlacklist,\n    toggleFilterMode,\n    filterEnabled,\n    toggleFilter,\n  } = labels;\n  const styles = useStyles();\n\n  const listEmpty = filterList.length < 1;\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.selected}>\n          {filterEnabled ? (\n            <>\n              <p className={styles.selectedLabel}>\n                {filterMode === FilterModes.WHITELIST\n                  ? listEmpty\n                    ? 'no items in whitelist'\n                    : 'showing only'\n                  : listEmpty\n                  ? 'no items in blacklist'\n                  : 'hiding'}\n              </p>\n              <Labels\n                labels={filterList}\n                buttons={({ className, label }) => (\n                  <button\n                    className={className}\n                    onClick={() =>\n                      filterMode === FilterModes.WHITELIST\n                        ? removeFromWhitelist(label)\n                        : removeFromBlacklist(label)\n                    }\n                  >\n                    remove from {filterMode.toLowerCase()}\n                  </button>\n                )}\n              />\n            </>\n          ) : null}\n        </div>\n\n        <div>\n          {filterEnabled ? (\n            <button\n              className={styles.button}\n              onClick={() => toggleFilterMode()}\n            >\n              switch to{' '}\n              {filterMode === FilterModes.WHITELIST ? 'blacklist' : 'whitelist'}{' '}\n              mode\n            </button>\n          ) : null}\n          <button className={styles.button2} onClick={() => toggleFilter()}>\n            {filterEnabled ? 'disable' : 'enable'} filter\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row justify-between items-end\n        w-full mb-2 px-1 mt-16\n    `,\n\n    selected: `\n        flex flex-row items-center\n    `,\n\n    selectedLabel: `\n        -mb-px text-sm\n        mr-2 leading-none\n        text-gray-700 dark:text-gray-500\n    `,\n\n    button: `\n        text-sm\n        text-purple-600\n        focus:outline-none\n        active:font-semibold\n    `,\n\n    button2: `\n        text-sm ml-4\n        text-gray-700 dark:text-gray-500\n        focus:outline-none\n        active:font-semibold\n    `,\n  });\n","import React from 'react';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './DarkModeToggle.styles';\n\nexport const DarkModeToggle = () => {\n  const { darkMode } = useConfig();\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <WbSunnyIcon className={styles.icon} fontSize=\"small\" />\n      <button\n        onClick={() => darkMode.toggleDarkMode()}\n        className={styles.switch}\n      >\n        <div\n          className={[\n            styles.knob,\n            darkMode.isDarkMode ? styles.knobActive : styles.knobInactive,\n          ]}\n        />\n      </button>\n      <Brightness3Icon className={styles.icon} fontSize=\"small\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        py-4 flex flex-row items-center justify-end\n    `,\n\n    icon: `\n        text-gray-600\n    `,\n\n    switch: `\n        bg-gray-400 dark:bg-gray-800\n        box-content\n        border-2 border-gray-400 dark:border-gray-800\n        w-12 h-6 rounded-full\n        relative\n        focus:outline-none\n        transition-shadow duration-200\n        active:shadow\n        mx-2\n    `,\n\n    knob: `\n        w-6 h-6 rounded-full\n        bg-gray-200 dark:bg-gray-700\n        absolute top-0 left-1/2\n        transition-transform duration-200\n        transform translate-x-0\n    `,\n\n    knobInactive: `\n        -translate-x-full\n    `,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { Apollo } from './Apollo';\nimport { Layout } from './components/Layout';\nimport { RepoPicker } from './components/RepoPicker';\nimport { ConfigController } from './components/ConfigController/ConfigController';\nimport { TokenGate } from './components/TokenGate';\nimport { PullRequests } from './components/PullRequests/PullRequests';\nimport { LabelFilters } from './components/LabelFilters';\nimport { DarkModeToggle } from './components/DarkModeToggle';\n\nexport const App = () => {\n  return (\n    <ConfigController>\n      <Layout>\n        <TokenGate>\n          <Apollo>\n            <DarkModeToggle />\n\n            <RepoPicker />\n\n            <LabelFilters />\n\n            <PullRequests />\n          </Apollo>\n        </TokenGate>\n      </Layout>\n    </ConfigController>\n  );\n};\n"],"sourceRoot":""}