{"version":3,"sources":["hooks/useRememberedState.js","components/ConfigController/ConfigKeys.js","components/ConfigController/useLabels.js","components/ConfigController/useDarkMode.js","components/ConfigController/ConfigController.js","components/ConfigController/useAuth.js","components/ConfigController/useSelectedRepos.js","helpers/mapToGroups.js","components/ConfigController/useDrafts.js","Apollo.js","hooks/useTailwind.js","components/Layout.js","components/Layout.styles.js","hooks/queries/useUserRepos.js","components/RepoList.js","components/RepoList.styles.js","components/RepoPickerToggle.js","components/RepoPickrToggle.styles.js","components/DarkModeToggle.js","components/DarkModeToggle.styles.js","hooks/queries/useRepoSearch.js","components/AddOtherRepo/AddOtherRepo.js","components/AddOtherRepo/AddOtherRepo.styles.js","hooks/useDebounced.js","components/RepoPicker.js","components/RepoPicker.styles.js","components/TokenGate.js","components/TokenGate.styles.js","hooks/useContrastingColor.js","hooks/useOnClickOutside.js","components/PullRequests/Label.js","components/PullRequests/Label.styles.js","components/PullRequests/Labels.js","components/PullRequests/Labels.styles.js","components/PullRequests/BuildStatus.js","components/PullRequests/StatusIcon.js","components/PullRequests/StatusIcon.styles.js","components/PullRequests/Reviews.js","components/PullRequests/Reviews.styles.js","components/DraftLabel.js","components/PullRequests/PullRequest.js","components/PullRequests/PullRequest.styles.js","hooks/queries/usePullRequests.js","components/PullRequests/PullRequests.js","components/PullRequests/PullRequests.styles.js","components/LabelFilters.js","components/LabelFilters.styles.js","App.js","index.js"],"names":["loadState","key","initial","str","stored","localStorage","getItem","JSON","parse","saveState","value","setItem","obj","stringify","useRememberedState","name","useRef","useState","current","state","setState","useEffect","ConfigKeys","FilterModes","useDarkMode","window","matchMedia","matches","isDarkMode","setIsDarkMode","document","documentElement","classList","add","remove","useMemo","toggleDarkMode","v","ConfigContext","createContext","useConfig","useContext","ConfigController","children","auth","token","setToken","useAuth","selectedRepos","repos","setRepos","groupedRepos","keyGetter","repo","owner","login","reduce","acc","item","index","push","repoKeys","map","nameWithOwner","containsRepo","includes","addRepo","rs","addRepos","removeRepo","filter","r","useSelectedRepos","labels","BLACKLIST","WHITELIST","filterEnabled","setFilterEnabled","filterMode","setFilterMode","whitelist","setWhitelist","blacklist","setBlacklist","addToList","useCallback","label","list","findIndex","l","filterList","listHasLabel","toggleFilter","toggleFilterMode","f","addToWhitelist","clearWhitelist","removeFromWhitelist","wl","addToBlacklist","clearBlacklist","removeFromBlacklist","bl","useLabels","darkMode","drafts","whitelisted","setWhitelisted","blacklisted","setBlacklisted","toggleWhitelisted","prev","toggleBlacklisted","useDrafts","config","Provider","Apollo","cache","InMemoryCache","link","HttpLink","uri","headers","authorization","client","ApolloClient","useTailwind","styleSheet","Object","entries","styles","Array","isArray","join","Layout","container","className","USER_REPOS","gql","RepoList","onRepoClick","removable","imageContainer","removeOverlay","removeIcon","image","text","TransitionGroup","CSSTransition","timeout","classNames","onClick","src","avatarUrl","alt","RepoPickerToggle","open","selectedCount","button","icon","count","DarkModeToggle","switch","knob","knobInactive","fontSize","knobActive","SEARCH_REPOS","AddOtherRepo","modalInner","inputContainer","iconContainer","input","emptyText","buttonContainer","saveButton","useModal","isModalOpen","openModal","closeModal","search","setSearch","selected","setSelected","selectedRepoNames","query","useQuery","variables","limit","data","rest","nodes","useRepoSearch","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounced","loading","id","isOpen","onBackdropClick","transition","ModalTransition","TOP_DOWN","onChange","e","target","placeholder","length","preventDefault","disabled","RepoPicker","onChoose","viewer","repositories","useUserRepos","error","setOpen","barWrapper","o","in","unmountOnExit","TokenGate","form","href","rel","onSubmit","type","getContrastingColor","color","hex","fullHex","replace","m","g","b","exec","n","parseInt","hexToRgb","Math","round","useOnClickOutside","ref","handler","refsOrRef","els","HTMLElement","handleClick","some","el","contains","addEventListener","removeEventListener","Label","buttons","IconComponent","tag","tooltipWrapper","tooltip","showTooltip","setShowTooltip","style","background","transform","display","hideTooltip","Labels","BuildStatus","status","Icon","SUCCESS","CheckRoundedIcon","ERROR","CloseRoundedIcon","FAILURE","PENDING","FiberManualRecordIcon","colorClass","StatusIcon","offset","last","COMMENTED","ChatBubbleRoundedIcon","CHANGES_REQUESTED","RateReviewRoundedIcon","APPROVED","AccessTimeRoundedIcon","DISMISSED","ClearRoundedIcon","MoodBadRoundedIcon","bgClass","textClass","title","leftOffset","left","bottom","Reviews","reviews","review","reviewerAvatar","reviewStatus","reviewsGroupedByUser","values","author","group","i","DraftLabel","plural","AccessTimeIcon","PullRequest","pullRequest","preTitle","ownerAvatar","titleBar","authorAvatar","authorName","timestamps","branches","created","format","parseISO","createdAt","updated","updatedAt","buildStatus","commits","commit","statusCheckRollup","repository","isDraft","inWhitelist","inBlacklist","permalink","baseRefName","headRefName","GET_PULL_REQUESTS","PullRequests","pullRequests","empty","pollInterval","usePullRequests","repoQuery","labelQuery","draftQuery","LabelFilters","selectedLabel","button2","listEmpty","toLowerCase","App","ReactDOM","render","getElementById"],"mappings":"iTAKMA,EAAY,SAACC,EAAKC,GACtB,IAHiBC,EAGXC,EAASC,aAAaC,QAAQL,GAEpC,OAAOG,GALUD,EAKUC,EALHG,KAAKC,MAAML,IAKED,GAGjCO,EAAY,SAACR,EAAKS,GAAN,OAAgBL,aAAaM,QAAQV,GATrCW,EASoDF,EAT7CH,KAAKM,UAAUD,KAAtB,IAAAA,GAWLE,EAAqB,SAACC,EAAMb,GACvC,IAAMD,EAAMe,iBAAOD,GADgC,EAGzBE,oBAAS,kBAAMjB,EAAUC,EAAIiB,QAAShB,MAHb,mBAG5CiB,EAH4C,KAGrCC,EAHqC,KASnD,OAJAC,qBAAU,WACRZ,EAAUR,EAAIiB,QAASC,KACtB,CAACA,IAEG,CAACA,EAAOC,ICtBJE,EACL,OADKA,EAEK,iBAFLA,EAGM,kBAHNA,EAIM,kBAJNA,EAKW,uBALXA,EAMQ,oBANRA,EAOA,YAPAA,EAQO,mBARPA,EASS,qBATTA,EAUS,qBCNTC,EACA,YADAA,EAEA,YCKAC,EAAc,WAAO,IAAD,EACKV,EAClCQ,EAPAG,OAAOC,YACPD,OAAOC,WAAW,gCAAgCC,SAIrB,mBACxBC,EADwB,KACZC,EADY,KAc/B,OARAR,qBAAU,WACJO,EACFE,SAASC,gBAAgBC,UAAUC,IAAI,aAEvCH,SAASC,gBAAgBC,UAAUE,OAAO,eAE3C,CAACN,IAEGO,mBACL,iBAAO,CACLP,aACAQ,eAFK,WAGHP,GAAc,SAAAQ,GAAC,OAAKA,SAGxB,CAACT,EAAYC,KCzBXS,EAAgBC,0BAETC,EAAY,kBAAMC,qBAAWH,IAE7BI,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3BC,ECRe,WAAO,IAAD,EACD9B,EAAmBQ,EAAiB,IADnC,mBACpBuB,EADoB,KACbC,EADa,KAG3B,OAAOX,mBACL,iBAAO,CACLU,QACAC,cAEF,CAACD,EAAOC,IDAGC,GACPC,EERwB,WAAO,IAAD,EACVlC,EAAmBQ,EAA2B,IADpC,mBAC7B2B,EAD6B,KACtBC,EADsB,KAG9BC,EAAehB,mBACnB,kBCT6BiB,EDSJ,SAACC,GAAD,OAAUA,EAAKC,MAAMC,OAA5BN,ECRhBO,QAAO,SAACC,EAAKC,EAAMC,GACrB,IAAM1D,EAAMmD,EAAUM,EAAMC,GAQ5B,OANIF,EAAIxD,GACNwD,EAAIxD,GAAK2D,KAAKF,GAEdD,EAAIxD,GAAO,CAACyD,GAGPD,IACN,IAXsB,IAAML,IDU7B,CAACH,IAGGY,EAAW1B,mBAAQ,kBAAMc,EAAMa,KAAI,SAACT,GAAD,OAAUA,EAAKU,mBAAgB,CACtEd,IAGF,OAAOd,mBACL,iBAAO,CACLc,QACAE,eACAU,WAEAG,aALK,SAKQX,GACX,OAAOQ,EAASI,SAASZ,EAAKU,gBAGhCG,QATK,SASGb,GACNH,GAAS,SAACiB,GAAD,4BAAYA,GAAZ,CAAgBd,QAG3Be,SAbK,SAaInB,GACPC,GAAS,SAACiB,GAAD,4BAAYA,GAAZ,YAAmBlB,QAG9BoB,WAjBK,SAiBMhB,GACTH,GAAS,SAACiB,GAAD,OACPA,EAAGG,QAAO,SAACC,GAAD,OAAOA,EAAER,gBAAkBV,EAAKU,wBAIhD,CAACd,EAAOE,EAAcU,EAAUX,IF5BZsB,GAChBC,EFLiB,WAAO,IACtBC,EAAyBnD,EAAdoD,EAAcpD,EADJ,EAEaT,EACxCQ,GACA,GAJ2B,mBAEtBsD,EAFsB,KAEPC,EAFO,OAOO/D,EAClCQ,EACAoD,GAT2B,mBAOtBI,EAPsB,KAOVC,EAPU,OAYKjE,EAChCQ,EACA,IAd2B,mBAYtB0D,EAZsB,KAYXC,EAZW,OAiBKnE,EAChCQ,EACA,IAnB2B,mBAiBtB4D,EAjBsB,KAiBXC,EAjBW,KAsBvBC,EAAYC,uBAChB,SAAAC,GAAK,OAAI,SAAAC,GAGP,OAFoBA,EAAKC,WAAU,SAAAC,GAAC,OAAIA,EAAE1E,OAASuE,EAAMvE,SAAS,EAE7CwE,EAAH,sBAAcA,GAAd,CAAoBD,OAExC,IAGF,OAAOnD,mBACL,iBAAO,CACL6C,YACAE,YACAJ,aACAY,WAAYZ,IAAeH,EAAYK,EAAYE,EACnDN,gBAEAe,aAPK,SAOQJ,EAAMD,GACjB,OAAOC,EAAKC,WAAU,SAAAC,GAAC,OAAIA,EAAE1E,OAASuE,EAAMvE,SAAS,GAGvD6E,aAXK,WAYHf,GAAiB,SAAAxC,GAAC,OAAKA,MAGzBwD,iBAfK,WAgBHd,GAAc,SAAAe,GAAC,OAAKA,IAAMnB,EAAYD,EAAYC,MAGpDoB,eAnBK,SAmBUT,GACbL,EAAaG,EAAUE,KAGzBU,eAvBK,WAwBHf,EAAa,KAGfgB,oBA3BK,SA2BeX,GAClBL,GAAa,SAAAiB,GAAE,OAAIA,EAAG5B,QAAO,SAAAmB,GAAC,OAAIA,EAAE1E,OAASuE,EAAMvE,YAGrDoF,eA/BK,SA+BUb,GACbH,EAAaC,EAAUE,KAGzBc,eAnCK,WAoCHjB,EAAa,KAGfkB,oBAvCK,SAuCef,GAClBH,GAAa,SAAAmB,GAAE,OAAIA,EAAGhC,QAAO,SAAAmB,GAAC,OAAIA,EAAE1E,OAASuE,EAAMvE,eAGvD,CACEiE,EACAE,EACAD,EACAE,EACAL,EACAC,EACAH,EACAC,EACAH,EACAC,EACAS,IEjFWmB,GACTC,EAAWhF,IACXiF,EIbiB,WAAO,IAAD,EACS3F,EACpCQ,GACA,GAH2B,mBACtBoF,EADsB,KACTC,EADS,OAKS7F,EACpCQ,GACA,GAP2B,mBAKtBsF,EALsB,KAKTC,EALS,KAU7B,MAAO,CACLH,cACAE,cAEAE,kBAJK,WAKHH,GAAe,SAACI,GAAD,OAAWA,MAG5BC,kBARK,WASHH,GAAe,SAACE,GAAD,OAAWA,OJNfE,GAETC,EAAS/E,mBACb,iBAAO,CAAES,OAAMI,gBAAeyB,SAAQ+B,WAAUC,YAChD,CAAC7D,EAAMI,EAAeyB,EAAQ+B,EAAUC,IAG1C,OACE,kBAACnE,EAAc6E,SAAf,CAAwBzG,MAAOwG,GAASvE,IKnB/ByE,EAAS,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SAEbE,EACNL,IADFI,KAAQC,MAGJwE,EAAQlF,mBAAQ,kBAAM,IAAImF,MAAiB,IAC3CC,EAAOpF,mBACX,kBACE,IAAIqF,IAAS,CACXC,IAAK,iCACLC,QAAS,CACPC,cAAc,UAAD,OAAY9E,QAG/B,CAACA,IAGG+E,EAASzF,mBAAQ,kBAAM,IAAI0F,IAAa,CAAEN,OAAMF,YAAU,CAC9DE,EACAF,IAGF,OAAO,kBAAC,IAAD,CAAgBO,OAAQA,GAASjF,ICzB7BmF,EAAc,SAAAC,GACzB,OAAO5F,mBAAQ,WACb,OAAO6F,OAAOC,QAAQF,GAAYvE,QAAO,SAACC,EAAD,GAAyB,IAAD,mBAAjBxD,EAAiB,KAAZiI,EAAY,KAG/D,OAFAzE,EAAIxD,GAAOkI,MAAMC,QAAQF,GAAUA,EAAOG,KAAK,KAAOH,EAE/CzE,IACN,MACF,CAACsE,KCNOO,EAAS,SAAC,GAAkB,IAAhB3F,EAAe,EAAfA,SACjBuF,ECDNJ,EAAY,CACVS,UAAU,gDDEZ,OAAO,yBAAKC,UAAWN,EAAOK,WAAY5F,I,2hBEH5C,IAAM8F,EAAaC,YAAH,K,gBCGHC,G,MAAW,SAAC,GAAsD,IAApD1F,EAAmD,EAAnDA,MAAmD,IAA5C2F,mBAA4C,MAA9B,KAA8B,MAAxBC,iBAAwB,SACtEX,ECJNJ,EAAY,CACV7E,MAAM,2EAINI,KAAK,kXAaLyF,eAAe,6DAIfC,cAAc,4IAOdC,WAAY,qCAEZC,MAAM,0BAINC,KAAK,uDD7BP,OACE,kBAACC,EAAA,EAAD,CAAiBX,UAAWN,EAAOjF,OAChCA,EAAMa,KAAI,SAACT,GAAD,OACT,kBAAC+F,EAAA,EAAD,CAAenJ,IAAKoD,EAAKU,cAAesF,QAAS,IAAKC,WAAW,QAC/D,4BACEd,UAAWN,EAAO7E,KAClBkG,QAASX,EAAcA,EAAYvF,GAAQ,MAE3C,yBAAKmF,UAAWN,EAAOY,gBACrB,yBACEU,IAAKnG,EAAKC,MAAMmG,UAChBjB,UAAWN,EAAOe,MAClBS,IAAKrG,EAAKU,gBAGX8E,EACC,yBAAKL,UAAWN,EAAOa,eACrB,uBAAGP,UAAWN,EAAOc,YAArB,WAEA,MAEN,uBAAGR,UAAWN,EAAOgB,MAAO7F,EAAKU,uB,iBE1BhC4F,EAAmB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,cAAeN,EAAc,EAAdA,QAChDrB,ECFNJ,EAAY,CACVgC,OAAO,qNAOPC,KAAK,oGAILH,KAAK,4BAGLI,MAAM,6BDZFd,EACc,IAAlBW,GAAwBD,EAAxB,WAE0B,IAAlBC,EAAsB,aAAe,eAF7C,aACI,+CAGN,OACE,4BAAQrB,UAAWN,EAAO4B,OAAQP,QAASA,GACzC,yBAAKf,UAAW,CAACN,EAAO6B,KAAMH,EAAO1B,EAAO0B,KAAO,OACjD,kBAAC,IAAD,OAEF,6BACE,0BAAMpB,UAAWN,EAAO8B,OACrBJ,EAAOC,EAAgBA,GAAiB,IAE1CX,K,kCEdIe,EAAiB,WAAO,IAC3BzD,EAAahE,IAAbgE,SACF0B,ECLNJ,EAAY,CACVS,UAAU,yDAIVwB,KAAK,gCAILG,OAAO,qRAYPC,KAAK,0LAQLC,aAAa,sCDtBf,OACE,yBAAK5B,UAAWN,EAAOK,WACrB,kBAAC,IAAD,CAAaC,UAAWN,EAAO6B,KAAMM,SAAS,UAC9C,4BACEd,QAAS,kBAAM/C,EAASpE,kBACxBoG,UAAWN,EAAOgC,QAElB,yBACE1B,UAAW,CACTN,EAAOiC,KACP3D,EAAS5E,WAAasG,EAAOoC,WAAapC,EAAOkC,iBAIvD,kBAAC,IAAD,CAAiB5B,UAAWN,EAAO6B,KAAMM,SAAS,Y,gZErBxD,IAAME,GAAe7B,YAAH,MCOL8B,GAAe,WAC1B,IAAMtC,ECRNJ,EAAY,CACV2C,WAAW,yDAKXlC,UAAU,4DAIVuB,OAAO,wRAUPZ,KAAK,sFAILwB,eAAe,sGAMfC,cAAc,4DAIdZ,KAAK,6BAILa,MAAM,kGAMNC,UAAU,qDAIVC,gBAAgB,mDAIhBC,WAAW,uHD7CmB,EAEeC,cAAvCC,EAFwB,EAExBA,YAAaC,EAFW,EAEXA,UAAWC,EAFA,EAEAA,WACxBnI,EAAkBR,IAAlBQ,cAHwB,EAKJ/B,mBAAS,IALL,mBAKzBmK,EALyB,KAKjBC,EALiB,OAMApK,mBAAS,IANT,mBAMzBqK,EANyB,KAMfC,EANe,KAQ1BC,EAAoBF,EAASxH,KAAI,SAACT,GAAD,OAAUA,EAAKU,iBARtB,EDUL,SAAC0H,GAAW,IAAD,EACZC,YAASnB,GAAc,CAC/CoB,UAAW,CAAEF,QAAOG,MAAO,MADrBC,EAD8B,EAC9BA,KAASC,EADqB,wBAKtC,OAAO,aACLD,OACA5I,MAAO4I,EAAOA,EAAKT,OAAOW,MAAQ,IAC/BD,GCRsBE,CElBD,SAACtL,GAA0B,IAAnB2I,EAAkB,uDAAR,IAAQ,EAClBpI,mBAASP,GADS,mBAC7CuL,EAD6C,KAClCC,EADkC,KAWpD,OARA7K,qBAAU,WACR,IAAM8K,EAAQC,YAAW,WACvBF,EAAaxL,KACZ2I,GAEH,OAAO,kBAAMgD,aAAaF,MACzB,CAACzL,EAAO2I,IAEJ4C,EFOkCK,CAAalB,IAA9CmB,EAVwB,EAUxBA,QAAStJ,EAVe,EAUfA,MAiBjB,OACE,yBAAKuF,UAAWN,EAAOK,WACrB,4BAAQC,UAAWN,EAAO4B,OAAQP,QAAS2B,GACzC,uBAAG1C,UAAWN,EAAOgB,MAArB,mBAGF,kBAAC,IAAD,CACEsD,GAAG,uBACHC,OAAQxB,EACRyB,gBAAiBvB,EACjBwB,WAAYC,IAAgBC,UAE5B,yBAAKrE,UAAWN,EAAOuC,YACrB,yBAAKjC,UAAWN,EAAOwC,gBACrB,yBAAKlC,UAAWN,EAAOyC,eACrB,kBAAC,KAAD,CAAmBnC,UAAWN,EAAO6B,QAEvC,2BACErJ,MAAO0K,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAU0B,EAAEC,OAAOtM,QACpC8H,UAAWN,EAAO0C,MAClBqC,YAAY,kDAIfV,GAAWtJ,EAAMiK,OAAS,EACzB,uBAAG1E,UAAWN,EAAO2C,WAClB0B,EAAU,eAAiB,kCAG9B,6BACE,kBAAC,EAAD,CACEtJ,MAAOA,EAAMqB,QACX,SAACC,GAAD,OACGiH,EAAkBvH,SAASM,EAAER,iBAC7Bf,EAAcgB,aAAaO,MAEhCqE,YApDK,SAACvF,GAAD,OAAU,SAAC0J,GAC5BA,EAAEI,iBAEF5B,GAAY,SAACxE,GAAD,4BAAcA,GAAd,CAAoB1D,YAsDzBiI,EAAS4B,OAAS,EACjB,oCACE,uBAAG1E,UAAWN,EAAOgB,MAArB,aAEA,kBAAC,EAAD,CAAUjG,MAAOqI,KAEjB,KAEJ,yBAAK9C,UAAWN,EAAO4C,iBACrB,4BACEtC,UAAWN,EAAO6C,WAClBqC,SAAU9B,EAAS4B,OAAS,EAC5B3D,QA/DO,SAACwD,GAClBA,EAAEI,iBAEFnK,EAAcoB,SAASkH,GACvBH,IACAE,EAAU,IACVE,EAAY,MAsDJ,aG1EC8B,I,MAAa,SAAC,GAAiB,EAAfC,SAAgB,IAAD,EXWhB,WAAO,IAAD,EACN5B,YAASjD,GAA3BoD,EADwB,EACxBA,KAASC,EADe,wBAGhC,OAAO,aACLD,OACA5I,MAAO4I,EAAOA,EAAK0B,OAAOC,aAAazB,MAAQ,MAC5CD,GWhB6B2B,GAA1BlB,EADkC,EAClCA,QAAStJ,EADyB,EACzBA,MAAOyK,EADkB,EAClBA,MAChB1K,EAAkBR,IAAlBQ,cAFkC,EAGlBlC,EAAmBQ,GAA6B,GAH9B,mBAGnCsI,EAHmC,KAG7B+D,EAH6B,KAIpCzF,ECfNJ,EAAY,CACV8F,WAAW,wCAIXrF,UAAU,cAEVW,KAAK,2FDsBP,OACE,oCACE,yBAAKV,UAAWN,EAAO0F,YACrB,kBAAC,EAAD,CACEhE,KAAMA,EACNC,cAAe7G,EAAcC,MAAMiK,OACnC3D,QAAS,kBAAMoE,GAAQ,SAACE,GAAD,OAAQA,QAEjC,kBAAC,EAAD,OAEF,kBAACzE,EAAA,EAAD,CAAe0E,GAAIlE,EAAMP,QAAS,IAAKC,WAAW,SAASyE,eAAa,GACtE,yBAAKvF,UAAWN,EAAOK,WACrB,uBAAGC,UAAWN,EAAOgB,MAArB,sDAGCqD,EACC,yCACEmB,EACF,sDAEA,oCACE,kBAAC,EAAD,CACEzK,MAAOA,EAAMqB,QAAO,SAACC,GAAD,OAAQvB,EAAcgB,aAAaO,MACvDqE,YAnCO,SAACvF,GAAD,OAAU,SAAC0J,GAC9BA,EAAEI,iBAEFnK,EAAckB,QAAQb,OAmCXL,EAAcC,MAAMiK,OAAS,EAC5B,oCACE,uBAAG1E,UAAWN,EAAOgB,MAArB,aACA,kBAAC,EAAD,CACEjG,MAAOD,EAAcC,MACrB2F,YArCC,SAACvF,GAAD,OAAU,SAAC0J,GAC5BA,EAAEI,iBAEFnK,EAAcqB,WAAWhB,KAmCTwF,WAAS,KAGX,KAEJ,kBAAC,GAAD,YEjEDmF,GAAY,SAAC,GAAkB,IAAhBrL,EAAe,EAAfA,SAClBC,EAASJ,IAATI,KACFsF,ECHNJ,EAAY,CACVS,UAAU,mEAIVW,KAAK,+FAML3B,KAAK,gDAIL0G,KAAK,oCAILrD,MAAM,+RAWNd,OAAO,mHD7BgC,EAIf7I,mBAAS,IAJM,mBAIlC4B,EAJkC,KAI3BC,EAJ2B,KAYzC,OAAOF,EAAKC,MACVF,EAEA,yBAAK6F,UAAWN,EAAOK,WACrB,uBAAGC,UAAWN,EAAOgB,MAArB,2HAGE,6BACA,uBACEgF,KAAK,0EACLlB,OAAO,SACPmB,IAAI,sBACJ3F,UAAWN,EAAOX,MAJpB,0CAUF,0BAAM6G,SAxBW,SAAArB,GACnBA,EAAEI,iBAEFvK,EAAKE,SAASD,IAqBkB2F,UAAWN,EAAO+F,MAC9C,2BACEI,KAAK,OACL3N,MAAOmC,EACPiK,SAAU,SAAAC,GAAC,OAAIjK,EAASiK,EAAEC,OAAOtM,QACjCuM,YAAY,iBACZzE,UAAWN,EAAO0C,QAGpB,4BAAQyD,KAAK,SAAS7F,UAAWN,EAAO4B,QAAxC,S,sCE9BKwE,GAAsB,SAAAC,GAAU,IAAD,EAX3B,SAAAC,GACf,IACMC,EAAUD,EAAIE,QADG,oCACqB,SAACC,EAAGpK,EAAGqK,EAAGC,GAAV,MAC1C,CAACtK,EAAGA,EAAGqK,EAAGA,EAAGC,EAAGA,GAAGxG,KAAK,OAHJ,EAMF,4CAA4CyG,KAAKL,GAN/C,mBAQtB,MAAO,CARe,gBAQL3K,KAAI,SAAAiL,GAAC,OAAIC,SAASD,EAAG,OAIpBE,CAASV,GADe,mBACnChK,EADmC,KAChCqK,EADgC,KAC7BC,EAD6B,KAI1C,OADUK,KAAKC,OAAW,IAAJ5K,EAAc,IAAJqK,EAAc,IAAJC,GAAW,KAC1C,IAAM,qBAAuB,4BCJ7BO,GAAoB,SAACC,EAAKC,GACrCjO,qBAAU,WACR,IAXUkO,EAWJC,GAXID,EAWQF,GAVPlH,MAAMC,QAAQmH,GAAaA,EAAY,CAACA,IAIzCzL,KAFC,SAAAuL,GAAG,OAAKA,aAAeI,cAAgBJ,EAAMA,EAAMA,EAAInO,YAU5DwO,EAAc,SAAA3C,GACAyC,EAAIG,MAAK,SAAAC,GACzB,OAAOA,GAAMA,EAAGC,SAAS9C,EAAEC,YAI3BsC,EAAQvC,IAMZ,OAFAjL,SAASgO,iBAAiB,YAAaJ,GAEhC,kBAAM5N,SAASiO,oBAAoB,YAAaL,MACtD,CAACL,EAAKC,KCzBEU,GAAQ,SAAC,GAA8C,IAA5C1K,EAA2C,EAA3CA,MAA2C,IAApC2K,eAAoC,MAA1B,KAA0B,EAApBC,EAAoB,EAApBA,cACvChI,ECHNJ,EAAY,CACVS,UAAU,gCAIV4H,IAAI,kNAUJpG,KAAK,uBAILqG,eAAe,qDAIfC,QAAQ,sKAMRvG,OAAO,0SD3BwD,EAE3B7I,oBAAS,GAFkB,mBAE1DqP,EAF0D,KAE7CC,EAF6C,KAG3DF,EAAUrP,mBAShB,OAPAoO,GACEiB,EACAhL,uBAAY,WACVkL,GAAe,KACd,KAIH,yBAAK/H,UAAWN,EAAOK,WACrB,4BACEgB,QAAS,kBAAMgH,GAAe,IAC9BnD,UAAW6C,EACXzH,UAAWN,EAAOiI,IAClBK,MAAO,CACLC,WAAW,IAAD,OAAMnL,EAAMiJ,OACtBA,MAAOD,GAAoBhJ,EAAMiJ,SAGlC2B,EACC,kBAACA,EAAD,CAAe1H,UAAWN,EAAO6B,KAAMyG,MAAO,CAAEnG,SAAU,MACxD,KACH/E,EAAMvE,MAGT,yBACEsO,IAAKgB,EACL7H,UAAWN,EAAOkI,eAClBI,MAAO,CACLE,UAAW,mBACXC,QAASL,GAAeL,EAAU,QAAU,SAG7CA,EACC,yBAAKzH,UAAWN,EAAOmI,SACpBJ,EAAQ,CACPzH,UAAWN,EAAO4B,OAClBxE,QACAsL,YAHO,WAILL,GAAe,OAInB,QEhDCM,GAAS,SAAC,GAA0C,IAAxCpM,EAAuC,EAAvCA,OAAuC,IAA/BwL,eAA+B,MAArB,KAAqB,EAAftN,EAAe,EAAfA,SACzCuF,ECFNJ,EAAY,CACVS,UAAU,+CDGZ,OACE,yBAAKC,UAAWN,EAAOK,WACpB5F,EAEA8B,EAAOX,KAAI,SAACwB,GAAD,OACV,kBAAC,GAAD,CAAOrF,IAAKqF,EAAMvE,KAAMuE,MAAOA,EAAO2K,QAASA,S,4DEP1Ca,GAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,EAAO,CACXC,QAASC,KACTC,MAAOC,KACPC,QAASD,KACTE,QAASC,MACTR,GAEIS,EAAa,CACjBP,QAAS,iBACTE,MAAO,eACPE,QAAS,eACTC,QAAQ,mBACRP,GAEF,OAAOC,EACL,0BAAMxI,UAAS,sBAAiBgJ,IAC9B,kBAACR,EAAD,CAAM3G,SAAS,WAEf,M,oGCfOoH,GAAa,SAAC,GAAoD,IAAlDV,EAAiD,EAAjDA,OAAiD,IAAzCW,cAAyC,MAAhC,EAAgC,MAA7BC,YAA6B,SACtEzJ,GADsE,0CCN5EJ,EAAY,CACVS,UAAU,6GAMVwB,KAAK,0CDEDiH,EACJ,CACEY,UAAWC,KACXC,kBAAmBC,KACnBC,SAAUd,KACVI,QAASW,KACTC,UAAWC,MACXpB,IAAWqB,KAETC,EACJ,CACET,UAAU,WACVE,kBAAkB,aAClBE,SAAS,eACTV,QAAQ,gBACRY,UAAU,iBACVnB,IANF,cAQIuB,EACJ,CACEV,UAAU,gBACVE,kBAAkB,eAClBE,SAAS,iBACTV,QAAQ,kBACRY,UAAU,mBACVnB,IANF,gBAQIwB,EACJ,CACEX,UAAU,YACVE,kBAAkB,oBAClBE,SAAS,WACTV,QAAQ,UACRY,UAAW,aACXnB,IANF,0BAMgCA,EANhC,KAQIyB,EAAa,IAAOd,GAAUC,EAAO,GAAM,IAEjD,OACE,yBACEnJ,UAAS,UAAK6J,EAAL,YAAgBC,EAAhB,YAA6BpK,EAAOK,WAC7CiI,MAAO,CACLiC,KAAK,GAAD,OAAKD,EAAL,OACJE,OAAQ,UACRhC,UAAYiB,EAAsB,GAAf,cAErBY,MAAOA,GAEP,kBAACvB,EAAD,CAAMxI,UAAWN,EAAO6B,KAAMM,SAAS,cExDhCsI,GAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB1K,ECFNJ,EAAY,CACV8K,QAAQ,qCAIRC,OAAO,gCAIPC,eAAe,yDAKfC,aAAa,6BDVTC,EAAuB7Q,mBAAQ,WACnC,OAAO6F,OAAOiL,OACZL,EAAQpP,QAAO,SAACC,EAAKoP,GAanB,OAZKpP,EAAIoP,EAAOK,OAAO3P,SACrBE,EAAIoP,EAAOK,OAAO3P,OAAS,CACzB2P,OAAQL,EAAOK,OACfN,QAAS,KAKQ,cAAjBC,EAAO1R,OACTsC,EAAIoP,EAAOK,OAAO3P,OAAOqP,QAAQhP,KAAKiP,GAGjCpP,IACN,KACHa,QAAO,SAAC6O,GAAD,OAAWA,EAAMP,QAAQ1F,OAAS,OAC1C,CAAC0F,IAEJ,OACE,oCACE,yBAAKpK,UAAWN,EAAO0K,SACpBI,EAAqBlP,KAAI,gBAAGoP,EAAH,EAAGA,OAAQN,EAAX,EAAWA,QAAX,OACxB,yBAAKpK,UAAWN,EAAO2K,OAAQ5S,IAAKiT,EAAO3P,OACzC,yBACEiG,IAAK0J,EAAOzJ,UACZC,IAAKwJ,EAAO3P,MACZiF,UAAWN,EAAO4K,iBAGpB,6BACGF,EAAQ9O,KAAI,SAAC+O,EAAQO,GAAT,OACX,kBAAC,GAAD,CACEnT,IAAK4S,EAAOrG,GACZuE,OAAQ8B,EAAO1R,MACfuQ,OAAQ0B,EACRzB,KAAMyB,IAAMR,EAAQ1F,OAAS,e,oBEvClCmG,GAAa,SAAC,GAAwB,IAAD,IAArBC,cAAqB,SACxC7M,EAAWjE,IAAXiE,OAER,OACE,kBAAC,GAAD,CACEnB,MAAO,CAAEvE,KAAK,QAAD,OAAUuS,EAAS,IAAM,IAAM/E,MAAO,UACnD2B,cAAeqD,KACftD,QAAS,gBAAGzH,EAAH,EAAGA,UAAWoI,EAAd,EAAcA,YAAd,OACP,oCACE,4BACEpI,UAAWA,EACXe,QAAS,WACP9C,EAAOK,oBACP8J,MAGDnK,EAAOC,YAAc,cAAgB,SAPxC,cAUA,4BACE8B,UAAWA,EACXe,QAAS,WACP9C,EAAOO,oBACP4J,MAGDnK,EAAOG,YAAc,cAAgB,SAPxC,mBCdG4M,GAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtBvL,ECRNJ,EAAY,CACV2L,YAAY,sGAMZC,SAAS,kDAITpQ,MAAM,6CAINqQ,YAAY,mDAIZtQ,KAAK,+EAILuQ,SAAS,kEAITrB,MAAM,2GAMNW,OAAO,wKAQPW,aAAa,mFAMbC,WAAW,oGAKXC,WAAW,qGAKXC,SAAS,yKDhDHvP,EAAWjC,IAAXiC,OAEFwP,EAAUC,aAAOC,aAASV,EAAYW,WAAY,gBAClDC,EAAUH,aAAOC,aAASV,EAAYa,WAAY,gBAElDC,EAAcpS,mBAAQ,WAAO,IACzB4J,EAAU0H,EAAYe,QAAtBzI,MACA0I,GAAW1I,EAAMA,EAAMmB,OAAS,IAAM,CAAEuH,OAAQ,OAAhDA,OAER,OAAOA,GAAUA,EAAOC,kBACpBD,EAAOC,kBAAkBvT,MACzB,OACH,CAACsS,IAEJ,OACE,yBAAKjL,UAAWN,EAAOuL,YAAaxT,IAAKwT,EAAYjH,IACnD,yBAAKhE,UAAWN,EAAO0L,UACrB,6BACE,yBAAKpL,UAAWN,EAAOwL,UACrB,yBAAKlL,UAAWN,EAAO5E,OACrB,yBACEkG,IAAKiK,EAAYkB,WAAWrR,MAAMmG,UAClCC,IAAK+J,EAAYkB,WAAW5Q,cAC5ByE,UAAWN,EAAOyL,cAEpB,uBAAGnL,UAAWN,EAAO7E,MAClBoQ,EAAYkB,WAAW5Q,gBAI3B0P,EAAYmB,SAAW,kBAAC,GAAD,MAExB,kBAAC,GAAD,CACEnQ,OAAQgP,EAAYhP,OAAOsH,MAC3BkE,QAAS,YAAwC,IAArCzH,EAAoC,EAApCA,UAAWlD,EAAyB,EAAzBA,MAAOsL,EAAkB,EAAlBA,YACtBiE,EAAcpQ,EAAOkB,aACzBlB,EAAOO,UACPM,GAEIwP,EAAcrQ,EAAOkB,aACzBlB,EAAOS,UACPI,GAGF,OACE,oCACE,4BACEkD,UAAWA,EACXe,QAAS,WACHsL,EACFpQ,EAAOwB,oBAAoBX,GAE3Bb,EAAOsB,eAAeT,GAExBsL,MAGDiE,EAAc,cAAgB,SAXjC,cAaA,4BACErM,UAAWA,EACXe,QAAS,WACHuL,EACFrQ,EAAO4B,oBAAoBf,GAE3Bb,EAAO0B,eAAeb,GAExBsL,MAGDkE,EAAc,cAAgB,SAXjC,mBAkBV,uBACEtM,UAAWN,EAAOqK,MAClBrE,KAAMuF,EAAYsB,UAClB/H,OAAO,SACPmB,IAAI,uBAEHsF,EAAYlB,QAIjB,yBAAK/J,UAAWN,EAAOgL,QACrB,yBACE1J,IAAKiK,EAAYP,OAAOzJ,UACxBC,IAAK+J,EAAYP,OAAO3P,MACxBiF,UAAWN,EAAO2L,eAEpB,uBAAGrL,UAAWN,EAAO4L,YAAaL,EAAYP,OAAO3P,SAIzD,uBAAGiF,UAAWN,EAAO8L,UACnB,8BAAOP,EAAYuB,aACnB,kBAAC,KAAD,MACA,8BAAOvB,EAAYwB,cAGrB,uBAAGzM,UAAWN,EAAO6L,YAArB,WACWE,EADX,kBACmCI,EACjC,kBAAC,GAAD,CAAatD,OAAQwD,KAGvB,kBAAC,GAAD,CAAS3B,QAASa,EAAYb,QAAQ7G,U,0pCErH5C,IAAMmJ,GAAoBxM,YAAH,MCIVyM,GAAe,WAAO,IAAD,EACU3S,IAAlCQ,EADwB,EACxBA,cAAeyB,EADS,EACTA,OAAQgC,EADC,EACDA,OACzByB,ECNNJ,EAAY,CACVsN,aAAa,oIAMbC,MAAM,gCAINxK,UAAU,mDDHNe,EAAQ5I,EAAcC,MAAMiK,OAAS,EAAI,GAAK,IAJpB,EDmDH,SAACzB,EAAOG,GAAW,IAAD,EACrBF,YAASwJ,GAAmB,CACpDvJ,UAAW,CAAEF,QAAOG,SACpB0J,aAAc,MAFRzJ,EADuC,EACvCA,KAASC,EAD8B,wBAM/C,OAAO,aACLD,OACAuJ,aAAcvJ,EAAOA,EAAKT,OAAOW,MAAQ,MACtCD,GCjCoCyJ,CArB3BpT,mBAAQ,WACpB,IAAMqT,EAAYxS,EAAcC,MAC7Ba,KAAI,SAACS,GAAD,qBAAeA,EAAER,kBACrBsE,KAAK,KAEFoN,EAAahR,EAAOG,cACtBH,EAAOK,aAAevD,EACpBkD,EAAOS,UAAUpB,KAAI,SAACwB,GAAD,wBAAsBA,EAAMvE,KAA5B,QAAqCsH,KAAK,KAC/D5D,EAAOO,UAAUlB,KAAI,SAACwB,GAAD,uBAAqBA,EAAMvE,KAA3B,QAAoCsH,KAAK,KAChE,GAEEqN,EACJjP,EAAOC,aAAejC,EAAOK,aAAevD,EACxC,WACAkF,EAAOG,aAAenC,EAAOK,aAAevD,EAC5C,YACA,GAEN,MAAM,iBAAN,OAAwBiU,EAAxB,YAAqCC,EAArC,YAAmDC,KAClD,CAAC1S,EAAcC,MAAOwB,EAAQgC,IAE+BmF,GAAxDW,EA3BwB,EA2BxBA,QAASmB,EA3Be,EA2BfA,MAAO0H,EA3BQ,EA2BRA,aAExB,OAAO7I,EACL,yCACEmB,EACF,sDAEA,yBAAKlF,UAAWN,EAAOkN,cACpBA,EAAalI,OAAS,EACrBkI,EAAatR,KAAI,SAAC2P,GAAD,OACf,kBAAC,GAAD,CAAaA,YAAaA,EAAaxT,IAAKwT,EAAYjH,QAG1D,yBAAKhE,UAAWN,EAAOmN,OACrB,uBAAG7M,UAAWN,EAAO2C,WAArB,6BEzCG8K,GAAe,WAAO,IAAD,EACLnT,IAAnBiC,EADwB,EACxBA,OAAQgC,EADgB,EAChBA,OAEd3B,EAOEL,EAPFK,WACAY,EAMEjB,EANFiB,WACAO,EAKExB,EALFwB,oBACAI,EAIE5B,EAJF4B,oBACAR,EAGEpB,EAHFoB,iBACAjB,EAEEH,EAFFG,cACAgB,EACEnB,EADFmB,aAEIsC,ECfNJ,EAAY,CACVS,UAAU,0EAKV+C,SAAS,6CAITsK,cAAc,+FAMd9L,OAAO,6GAOP+L,QAAQ,qIDNJC,EAAYpQ,EAAWwH,OAAS,EAEtC,OACE,oCACE,yBAAK1E,UAAWN,EAAOK,WACrB,yBAAKC,UAAWN,EAAOoD,UACpB1G,EACC,oCACE,uBAAG4D,UAAWN,EAAO0N,eAClB9Q,IAAevD,EACZuU,IAAcrP,EAAOC,YACnB,wBACA,eACFoP,IAAcrP,EAAOG,YACrB,wBACA,UAEN,kBAAC,GAAD,CACEnC,OAAQiB,EACRuK,QAAS,gBAAGzH,EAAH,EAAGA,UAAWlD,EAAd,EAAcA,MAAd,OACP,4BACEkD,UAAWA,EACXe,QAAS,kBACPzE,IAAevD,EACX0E,EAAoBX,GACpBe,EAAoBf,KAL5B,eAQeR,EAAWiR,iBAI1BjR,IAAevD,GAAyBkF,EAAOC,aAChD5B,IAAevD,GAAyBkF,EAAOG,YAC9C,kBAAC,GAAD,CAAY0M,QAAM,IAChB,OAGN,MAGN,6BACG1O,EACC,4BACE4D,UAAWN,EAAO4B,OAClBP,QAAS,kBAAM1D,MAFjB,YAIY,IACTf,IAAevD,EAAwB,YAAc,YAAa,IALrE,QAQE,KACJ,4BAAQiH,UAAWN,EAAO2N,QAAStM,QAAS,kBAAM3D,MAC/ChB,EAAgB,UAAY,SAD/B,eE5DGoR,I,MAAM,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,a,MCjBdC,IAASC,OAAO,kBAAC,GAAD,MAASpU,SAASqU,eAAe,W","file":"static/js/main.54e29498.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nconst serialize = obj => JSON.stringify(obj);\nconst deserialze = str => JSON.parse(str);\n\nconst loadState = (key, initial) => {\n  const stored = localStorage.getItem(key);\n\n  return stored ? deserialze(stored) : initial;\n};\n\nconst saveState = (key, value) => localStorage.setItem(key, serialize(value));\n\nexport const useRememberedState = (name, initial) => {\n  const key = useRef(name);\n\n  const [state, setState] = useState(() => loadState(key.current, initial));\n\n  useEffect(() => {\n    saveState(key.current, state);\n  }, [state]);\n\n  return [state, setState];\n};\n","export const ConfigKeys = {\n  AUTH: 'AUTH',\n  SELECTED_REPOS: 'SELECTED_REPOS',\n  LABEL_WHITELIST: 'LABEL_WHITELIST',\n  LABEL_BLACKLIST: 'LABEL_BLACKLIST',\n  LABEL_FILTER_ENABLED: 'LABEL_FILTER_ENABLED',\n  LABEL_FILTER_MODE: 'LABEL_FILTER_MODE',\n  DARK_MODE: 'DARK_MODE',\n  REPO_PICKER_OPEN: 'REPO_PICKER_OPEN',\n  DRAFTS_WHITELISTED: 'DRAFTS_WHITELISTED',\n  DRAFTS_BLACKLISTED: 'DRAFTS_BLACKLISTED',\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo, useCallback } from 'react';\n\nexport const FilterModes = {\n  WHITELIST: 'WHITELIST',\n  BLACKLIST: 'BLACKLIST',\n};\n\nexport const useLabels = () => {\n  const { BLACKLIST, WHITELIST } = FilterModes;\n  const [filterEnabled, setFilterEnabled] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_ENABLED,\n    false,\n  );\n\n  const [filterMode, setFilterMode] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_MODE,\n    BLACKLIST,\n  );\n\n  const [whitelist, setWhitelist] = useRememberedState(\n    ConfigKeys.LABEL_WHITELIST,\n    [],\n  );\n\n  const [blacklist, setBlacklist] = useRememberedState(\n    ConfigKeys.LABEL_BLACKLIST,\n    [],\n  );\n\n  const addToList = useCallback(\n    label => list => {\n      const isDuplicate = list.findIndex(l => l.name === label.name) >= 0;\n\n      return isDuplicate ? list : [...list, label];\n    },\n    [],\n  );\n\n  return useMemo(\n    () => ({\n      whitelist,\n      blacklist,\n      filterMode,\n      filterList: filterMode === WHITELIST ? whitelist : blacklist,\n      filterEnabled,\n\n      listHasLabel(list, label) {\n        return list.findIndex(l => l.name === label.name) >= 0;\n      },\n\n      toggleFilter() {\n        setFilterEnabled(v => !v);\n      },\n\n      toggleFilterMode() {\n        setFilterMode(f => (f === WHITELIST ? BLACKLIST : WHITELIST));\n      },\n\n      addToWhitelist(label) {\n        setWhitelist(addToList(label));\n      },\n\n      clearWhitelist() {\n        setWhitelist([]);\n      },\n\n      removeFromWhitelist(label) {\n        setWhitelist(wl => wl.filter(l => l.name !== label.name));\n      },\n\n      addToBlacklist(label) {\n        setBlacklist(addToList(label));\n      },\n\n      clearBlacklist() {\n        setBlacklist([]);\n      },\n\n      removeFromBlacklist(label) {\n        setBlacklist(bl => bl.filter(l => l.name !== label.name));\n      },\n    }),\n    [\n      whitelist,\n      blacklist,\n      setWhitelist,\n      setBlacklist,\n      filterMode,\n      setFilterMode,\n      filterEnabled,\n      setFilterEnabled,\n      BLACKLIST,\n      WHITELIST,\n      addToList,\n    ],\n  );\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo, useEffect } from 'react';\n\nconst userPrefersDarkMode = () => {\n  return (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n};\n\nexport const useDarkMode = () => {\n  const [isDarkMode, setIsDarkMode] = useRememberedState(\n    ConfigKeys.DARK_MODE,\n    userPrefersDarkMode(),\n  );\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('mode-dark');\n    } else {\n      document.documentElement.classList.remove('mode-dark');\n    }\n  }, [isDarkMode]);\n\n  return useMemo(\n    () => ({\n      isDarkMode,\n      toggleDarkMode() {\n        setIsDarkMode(v => !v);\n      },\n    }),\n    [isDarkMode, setIsDarkMode],\n  );\n};\n","import React, { createContext, useContext, useMemo } from 'react';\nimport { useSelectedRepos } from './useSelectedRepos';\nimport { useAuth } from './useAuth';\nimport { useLabels } from './useLabels';\nimport { useDarkMode } from './useDarkMode';\nimport { useDrafts } from './useDrafts';\n\nconst ConfigContext = createContext();\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const ConfigController = ({ children }) => {\n  const auth = useAuth();\n  const selectedRepos = useSelectedRepos();\n  const labels = useLabels();\n  const darkMode = useDarkMode();\n  const drafts = useDrafts();\n\n  const config = useMemo(\n    () => ({ auth, selectedRepos, labels, darkMode, drafts }),\n    [auth, selectedRepos, labels, darkMode, drafts],\n  );\n\n  return (\n    <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n  );\n};\n","import { ConfigKeys } from './ConfigKeys';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { useMemo } from 'react';\n\nexport const useAuth = () => {\n  const [token, setToken] = useRememberedState(ConfigKeys.AUTH, '');\n\n  return useMemo(\n    () => ({\n      token,\n      setToken,\n    }),\n    [token, setToken],\n  );\n};\n","import { useMemo } from 'react';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { mapToGroups } from '../../helpers/mapToGroups';\n\nexport const useSelectedRepos = () => {\n  const [repos, setRepos] = useRememberedState(ConfigKeys.SELECTED_REPOS, []);\n\n  const groupedRepos = useMemo(\n    () => mapToGroups(repos, (repo) => repo.owner.login),\n    [repos],\n  );\n\n  const repoKeys = useMemo(() => repos.map((repo) => repo.nameWithOwner), [\n    repos,\n  ]);\n\n  return useMemo(\n    () => ({\n      repos,\n      groupedRepos,\n      repoKeys,\n\n      containsRepo(repo) {\n        return repoKeys.includes(repo.nameWithOwner);\n      },\n\n      addRepo(repo) {\n        setRepos((rs) => [...rs, repo]);\n      },\n\n      addRepos(repos) {\n        setRepos((rs) => [...rs, ...repos]);\n      },\n\n      removeRepo(repo) {\n        setRepos((rs) =>\n          rs.filter((r) => r.nameWithOwner !== repo.nameWithOwner),\n        );\n      },\n    }),\n    [repos, groupedRepos, repoKeys, setRepos],\n  );\n};\n","export const mapToGroups = (arr, keyGetter) =>\n  arr.reduce((acc, item, index) => {\n    const key = keyGetter(item, index);\n\n    if (acc[key]) {\n      acc[key].push(item);\n    } else {\n      acc[key] = [item];\n    }\n\n    return acc;\n  }, {});\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\n\nexport const useDrafts = () => {\n  const [whitelisted, setWhitelisted] = useRememberedState(\n    ConfigKeys.DRAFTS_WHITELISTED,\n    false,\n  );\n  const [blacklisted, setBlacklisted] = useRememberedState(\n    ConfigKeys.DRAFTS_BLACKLISTED,\n    false,\n  );\n\n  return {\n    whitelisted,\n    blacklisted,\n\n    toggleWhitelisted() {\n      setWhitelisted((prev) => !prev);\n    },\n\n    toggleBlacklisted() {\n      setBlacklisted((prev) => !prev);\n    },\n  };\n};\n","import React, { useMemo } from 'react';\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useConfig } from './components/ConfigController/ConfigController';\n\nexport const Apollo = ({ children }) => {\n  const {\n    auth: { token },\n  } = useConfig();\n\n  const cache = useMemo(() => new InMemoryCache(), []);\n  const link = useMemo(\n    () =>\n      new HttpLink({\n        uri: 'https://api.github.com/graphql',\n        headers: {\n          authorization: `bearer ${token}`,\n        },\n      }),\n    [token],\n  );\n\n  const client = useMemo(() => new ApolloClient({ link, cache }), [\n    link,\n    cache,\n  ]);\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n","import { useMemo } from 'react';\n\nexport const useTailwind = styleSheet => {\n  return useMemo(() => {\n    return Object.entries(styleSheet).reduce((acc, [key, styles]) => {\n      acc[key] = Array.isArray(styles) ? styles.join(' ') : styles;\n\n      return acc;\n    }, {});\n  }, [styleSheet]);\n};\n","import React from 'react';\nimport { useStyles } from './Layout.styles';\n\nexport const Layout = ({ children }) => {\n  const styles = useStyles();\n\n  return <div className={styles.container}>{children}</div>;\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n      px-8 max-w-5xl mx-auto h-full\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst USER_REPOS = gql`\n  {\n    viewer {\n      repositories(\n        first: 12\n        affiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        ownerAffiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        orderBy: { field: UPDATED_AT, direction: DESC }\n      ) {\n        nodes {\n          name\n          nameWithOwner\n          owner {\n            login\n            avatarUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useUserRepos = () => {\n  const { data, ...rest } = useQuery(USER_REPOS);\n\n  return {\n    data,\n    repos: data ? data.viewer.repositories.nodes : null,\n    ...rest,\n  };\n};\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useStyles } from './RepoList.styles';\n\nimport './RepoList.css';\n\nexport const RepoList = ({ repos, onRepoClick = null, removable = false }) => {\n  const styles = useStyles();\n\n  return (\n    <TransitionGroup className={styles.repos}>\n      {repos.map((repo) => (\n        <CSSTransition key={repo.nameWithOwner} timeout={200} classNames=\"item\">\n          <button\n            className={styles.repo}\n            onClick={onRepoClick ? onRepoClick(repo) : null}\n          >\n            <div className={styles.imageContainer}>\n              <img\n                src={repo.owner.avatarUrl}\n                className={styles.image}\n                alt={repo.nameWithOwner}\n              />\n\n              {removable ? (\n                <div className={styles.removeOverlay}>\n                  <p className={styles.removeIcon}>✕</p>\n                </div>\n              ) : null}\n            </div>\n            <p className={styles.text}>{repo.nameWithOwner}</p>\n          </button>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    repos: `\n        flex flex-row items-center justify-center flex-wrap mb-4\n    `,\n\n    repo: `\n        bg-gray-400 dark:bg-gray-800\n        focus:bg-purple-300 dark-focus:bg-purple-800\n        text-gray-800 dark:text-gray-400\n        focus:text-purple-800 dark-focus:text-purple-300\n        inline-block whitespace-no-wrap\n        m-1 rounded-full p-1 pr-3\n        flex flex-row items-center\n\n        hover:bg-gray-500\n        focus:outline-none\n    `,\n\n    imageContainer: `\n        relative mr-2 rounded-full overflow-hidden\n    `,\n\n    removeOverlay: `\n        absolute top-0 bottom-0 right-0 left-0\n        bg-gray-600\n        flex items-center justify-center\n        opacity-75\n    `,\n\n    removeIcon: 'text-gray-200 text-xs leading-none',\n\n    image: `\n        w-6 h-6\n    `,\n\n    text: `\n        text-sm leading-none font-semibold\n    `,\n  });\n","import React from 'react';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport { useStyles } from './RepoPickrToggle.styles';\n\nexport const RepoPickerToggle = ({ open, selectedCount, onClick }) => {\n  const styles = useStyles();\n  const text =\n    selectedCount === 0 && !open\n      ? 'Click to select repositories you want to see'\n      : ` ${selectedCount === 1 ? 'repository' : 'repositories'} selected`;\n\n  return (\n    <button className={styles.button} onClick={onClick}>\n      <div className={[styles.icon, open ? styles.open : null]}>\n        <ExpandLess />\n      </div>\n      <div>\n        <span className={styles.count}>\n          {open ? selectedCount : selectedCount || ''}\n        </span>\n        {text}\n      </div>\n    </button>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    button: `\n      py-2 px-1 mr-8\n      border-b border-t border-gray-400 dark:border-gray-850\n      text-gray-800 dark:text-white text-sm leading-loose\n      flex justify-between w-full\n      focus:outline-none\n    `,\n    icon: `\n      transition transition-transform duration-200 ease-in-out\n      transform rotate-90\n    `,\n    open: `\n       rotate-180\n    `,\n    count: `\n       font-bold\n    `,\n  });\n","import React from 'react';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './DarkModeToggle.styles';\n\nexport const DarkModeToggle = () => {\n  const { darkMode } = useConfig();\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <WbSunnyIcon className={styles.icon} fontSize=\"small\" />\n      <button\n        onClick={() => darkMode.toggleDarkMode()}\n        className={styles.switch}\n      >\n        <div\n          className={[\n            styles.knob,\n            darkMode.isDarkMode ? styles.knobActive : styles.knobInactive,\n          ]}\n        />\n      </button>\n      <Brightness3Icon className={styles.icon} fontSize=\"small\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center justify-end\n    `,\n\n    icon: `\n        text-gray-600\n    `,\n\n    switch: `\n        bg-gray-400 dark:bg-gray-800\n        box-content\n        border-2 border-gray-400 dark:border-gray-800\n        w-12 h-6 rounded-full\n        relative\n        focus:outline-none\n        transition-shadow duration-200\n        active:shadow\n        mx-2\n    `,\n\n    knob: `\n        w-6 h-6 rounded-full\n        bg-gray-200 dark:bg-gray-700\n        absolute top-0 left-1/2\n        transition-transform duration-200\n        transform translate-x-0\n    `,\n\n    knobInactive: `\n        -translate-x-full\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst SEARCH_REPOS = gql`\n  query Repositories($query: String!, $limit: Int!) {\n    search(query: $query, type: REPOSITORY, last: $limit) {\n      nodes {\n        ... on Repository {\n          name\n          nameWithOwner\n          owner {\n            login\n            avatarUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useRepoSearch = (query) => {\n  const { data, ...rest } = useQuery(SEARCH_REPOS, {\n    variables: { query, limit: 10 },\n  });\n\n  return {\n    data,\n    repos: data ? data.search.nodes : [],\n    ...rest,\n  };\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useModal, Modal, ModalTransition } from 'react-simple-hook-modal';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport { useStyles } from './AddOtherRepo.styles';\nimport { useRepoSearch } from '../../hooks/queries/useRepoSearch';\nimport { useDebounced } from '../../hooks/useDebounced';\nimport { RepoList } from '../RepoList';\nimport { useConfig } from '../ConfigController/ConfigController';\n\nexport const AddOtherRepo = () => {\n  const styles = useStyles();\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const { selectedRepos } = useConfig();\n\n  const [search, setSearch] = useState('');\n  const [selected, setSelected] = useState([]);\n\n  const selectedRepoNames = selected.map((repo) => repo.nameWithOwner);\n\n  const { loading, repos } = useRepoSearch(useDebounced(search));\n\n  const selectRepo = (repo) => (e) => {\n    e.preventDefault();\n\n    setSelected((prev) => [...prev, repo]);\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n\n    selectedRepos.addRepos(selected);\n    closeModal();\n    setSearch('');\n    setSelected([]);\n  };\n\n  return (\n    <div className={styles.container}>\n      <button className={styles.button} onClick={openModal}>\n        <p className={styles.text}>Add Other Repo</p>\n      </button>\n\n      <Modal\n        id=\"add-other-repo-modal\"\n        isOpen={isModalOpen}\n        onBackdropClick={closeModal}\n        transition={ModalTransition.TOP_DOWN}\n      >\n        <div className={styles.modalInner}>\n          <div className={styles.inputContainer}>\n            <div className={styles.iconContainer}>\n              <SearchRoundedIcon className={styles.icon} />\n            </div>\n            <input\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              className={styles.input}\n              placeholder=\"Search for a repo, e.g. jakewtaylor/git-dash\"\n            />\n          </div>\n\n          {loading || repos.length < 1 ? (\n            <p className={styles.emptyText}>\n              {loading ? 'Searching...' : 'Start typing to see results...'}\n            </p>\n          ) : (\n            <div>\n              <RepoList\n                repos={repos.filter(\n                  (r) =>\n                    !selectedRepoNames.includes(r.nameWithOwner) &&\n                    !selectedRepos.containsRepo(r),\n                )}\n                onRepoClick={selectRepo}\n              />\n            </div>\n          )}\n\n          {selected.length > 0 ? (\n            <>\n              <p className={styles.text}>Selected:</p>\n\n              <RepoList repos={selected} />\n            </>\n          ) : null}\n\n          <div className={styles.buttonContainer}>\n            <button\n              className={styles.saveButton}\n              disabled={selected.length < 1}\n              onClick={handleSave}\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    modalInner: `\n        h-full flex flex-col\n        relative\n    `,\n\n    container: `\n        flex flex-row items-center justify-center\n    `,\n\n    button: `\n        bg-gray-400 dark:bg-gray-800\n        rounded-full p-3 px-5\n        text-gray-800 dark:text-gray-400\n        focus:text-purple-800 dark-focus:text-purple-300\n        opacity-75\n        focus:outline-none\n        focus:bg-purple-300 dark-focus:bg-purple-800\n    `,\n\n    text: `\n        text-sm leading-none font-semibold text-gray-800 dark:text-gray-400\n    `,\n\n    inputContainer: `\n        bg-gray-200 block w-full rounded overflow-none\n        flex flex-row\n        mb-4\n    `,\n\n    iconContainer: `\n        flex items-center justify-center p-2 pl-3\n    `,\n\n    icon: `\n        opacity-50\n    `,\n\n    input: `\n        p-2 pl-0 w-full bg-gray-200 rounded\n        flex-1\n        focus:outline-none\n    `,\n\n    emptyText: `\n        text-gray-700 text-sm leading-none\n    `,\n\n    buttonContainer: `\n        flex flex-row justify-end w-full\n    `,\n\n    saveButton: `\n        p-2 px-3 bg-purple-600 leading-none rounded\n        text-purple-100\n        disabled:opacity-50 \n    `,\n  });\n","import { useEffect, useState } from 'react';\n\nexport const useDebounced = (value, timeout = 500) => {\n  const [debounced, setDebounced] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebounced(value);\n    }, timeout);\n\n    return () => clearTimeout(timer);\n  }, [value, timeout]);\n\n  return debounced;\n};\n","import React from 'react';\nimport { useUserRepos } from '../hooks/queries/useUserRepos';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { RepoList } from './RepoList';\nimport { useStyles } from './RepoPicker.styles';\nimport { RepoPickerToggle } from './RepoPickerToggle';\nimport { CSSTransition } from 'react-transition-group';\nimport { useRememberedState } from '../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigController/ConfigKeys';\nimport { DarkModeToggle } from './DarkModeToggle';\nimport { AddOtherRepo } from './AddOtherRepo/AddOtherRepo';\n\nimport './RepoPicker.css';\n\nexport const RepoPicker = ({ onChoose }) => {\n  const { loading, repos, error } = useUserRepos();\n  const { selectedRepos } = useConfig();\n  const [open, setOpen] = useRememberedState(ConfigKeys.REPO_PICKER_OPEN, true);\n  const styles = useStyles();\n\n  const handleChoose = (repo) => (e) => {\n    e.preventDefault();\n\n    selectedRepos.addRepo(repo);\n  };\n\n  const removeRepo = (repo) => (e) => {\n    e.preventDefault();\n\n    selectedRepos.removeRepo(repo);\n  };\n\n  return (\n    <>\n      <div className={styles.barWrapper}>\n        <RepoPickerToggle\n          open={open}\n          selectedCount={selectedRepos.repos.length}\n          onClick={() => setOpen((o) => !o)}\n        />\n        <DarkModeToggle />\n      </div>\n      <CSSTransition in={open} timeout={200} classNames=\"picker\" unmountOnExit>\n        <div className={styles.container}>\n          <p className={styles.text}>\n            Get started by picking some repos you want to see:\n          </p>\n          {loading ? (\n            <p>Loading...</p>\n          ) : error ? (\n            <p>something went wrong...</p>\n          ) : (\n            <>\n              <RepoList\n                repos={repos.filter((r) => !selectedRepos.containsRepo(r))}\n                onRepoClick={handleChoose}\n              />\n\n              {selectedRepos.repos.length > 0 ? (\n                <>\n                  <p className={styles.text}>Selected:</p>\n                  <RepoList\n                    repos={selectedRepos.repos}\n                    onRepoClick={removeRepo}\n                    removable\n                  />\n                </>\n              ) : null}\n\n              <AddOtherRepo />\n            </>\n          )}\n        </div>\n      </CSSTransition>\n    </>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    barWrapper: `\n      flex flex-row mb-8 pt-4\n    `,\n\n    container: `-mt-4 mb-12`,\n\n    text: `\n        mb-2 text-gray-900 dark:text-gray-500 font-light\n        leading-none\n    `,\n  });\n","import React, { useState } from 'react';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './TokenGate.styles';\n\nexport const TokenGate = ({ children }) => {\n  const { auth } = useConfig();\n  const styles = useStyles();\n\n  const [token, setToken] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    auth.setToken(token);\n  };\n\n  return auth.token ? (\n    children\n  ) : (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Welcome! Before you can get started, you need to supply us with a\n        Personal Access Token so we can see your repositories.\n        <br />\n        <a\n          href=\"https://github.com/settings/tokens/new?scopes=repo&description=git-dash\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={styles.link}\n        >\n          Click here to generate one on Github.\n        </a>\n      </p>\n\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          value={token}\n          onChange={e => setToken(e.target.value)}\n          placeholder=\"Paste PAT Here\"\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.button}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-col items-center justify-center h-full\n    `,\n\n    text: `\n        text-center max-w-md\n        text-gray-800 mb-4\n        dark:text-gray-600\n    `,\n\n    link: `\n        text-purple-600 font-semibold\n    `,\n\n    form: `\n        shadow-lg rounded\n    `,\n\n    input: `\n        w-56 h-12 px-4 rounded-l\n        border border-r-0\n        border-gray-400 dark:border-gray-750\n        bg-gray-100 dark:bg-gray-600\n        focus:outline-none\n        focus:border-purple-600\n        placeholder-gray-500\n        text-gray-800 dark:text-gray-400\n    `,\n\n    button: `\n        h-12 px-4 bg-purple-600 text-purple-100 rounded-r\n        border border-purple-800 border-l-0\n    `,\n  });\n","import { useMemo } from 'react';\n\nconst hexToRgb = hex => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const fullHex = hex.replace(shorthandRegex, (m, r, g, b) =>\n    [r, r, g, g, b, b].join(''),\n  );\n\n  const [, r, g, b] = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHex);\n\n  return [r, g, b].map(n => parseInt(n, 16));\n};\n\nexport const getContrastingColor = color => {\n  const [r, g, b] = hexToRgb(color);\n\n  const o = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n  return o > 125 ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.9)';\n};\n\nexport const useContrastingColor = color =>\n  useMemo(() => {\n    return getContrastingColor(color);\n  }, [color]);\n","import { useEffect } from 'react';\n\n// converts a single ref, element or array into\n// an array of corresponding elements\nconst toEls = refsOrRef => {\n  const refs = Array.isArray(refsOrRef) ? refsOrRef : [refsOrRef];\n\n  const toEl = ref => (ref instanceof HTMLElement || !ref ? ref : ref.current);\n\n  return refs.map(toEl);\n};\n\n// `ref` is either a single ref, element or an array of either\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const els = toEls(ref);\n\n    const handleClick = e => {\n      const contained = els.some(el => {\n        return el && el.contains(e.target);\n      });\n\n      if (!contained) {\n        handler(e);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [ref, handler]);\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getContrastingColor } from '../../hooks/useContrastingColor';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useStyles } from './Label.styles';\n\nexport const Label = ({ label, buttons = null, IconComponent }) => {\n  const styles = useStyles();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltip = useRef();\n\n  useOnClickOutside(\n    tooltip,\n    useCallback(() => {\n      setShowTooltip(false);\n    }, []),\n  );\n\n  return (\n    <div className={styles.container}>\n      <button\n        onClick={() => setShowTooltip(true)}\n        disabled={!buttons}\n        className={styles.tag}\n        style={{\n          background: `#${label.color}`,\n          color: getContrastingColor(label.color),\n        }}\n      >\n        {IconComponent ? (\n          <IconComponent className={styles.icon} style={{ fontSize: 12 }} />\n        ) : null}\n        {label.name}\n      </button>\n\n      <div\n        ref={tooltip}\n        className={styles.tooltipWrapper}\n        style={{\n          transform: 'translateX(-50%)',\n          display: showTooltip && buttons ? 'block' : 'none',\n        }}\n      >\n        {buttons ? (\n          <div className={styles.tooltip}>\n            {buttons({\n              className: styles.button,\n              label,\n              hideTooltip() {\n                setShowTooltip(false);\n              },\n            })}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        relative mr-1\n    `,\n\n    tag: `\n        leading-none text-xs px-2 py-1\n        rounded-full font-semibold\n        shadow-inner\n        focus:outline-none\n        focus:opacity-75\n        hover:shadow\n        flex items-center\n    `,\n\n    icon: `\n        mr-1\n    `,\n\n    tooltipWrapper: `\n        absolute bottom-full left-1/2 pb-1\n    `,\n\n    tooltip: `\n        bg-white dark:bg-gray-750 rounded\n        border border-gray-300 dark:border-gray-800\n        shadow-lg py-1 min-w-48 flex flex-col items-stretch\n    `,\n\n    button: `\n        lowercase whitespace-no-wrap\n        leading-none px-4 py-2 text-sm\n        text-gray-700 dark:text-gray-300\n        hover:bg-purple-300 hover:text-purple-800\n        dark-hover:bg-purple-600 dark-hover:text-purple-100\n        focus:outline-none\n        focus:bg-gray-200\n    `,\n  });\n","import React from 'react';\nimport { useStyles } from './Labels.styles';\nimport { Label } from './Label';\n\nexport const Labels = ({ labels, buttons = null, children }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      {children}\n\n      {labels.map((label) => (\n        <Label key={label.name} label={label} buttons={buttons} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center\n    `,\n  });\n","import React from 'react';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\n\nexport const BuildStatus = ({ status }) => {\n  const Icon = {\n    SUCCESS: CheckRoundedIcon,\n    ERROR: CloseRoundedIcon,\n    FAILURE: CloseRoundedIcon,\n    PENDING: FiberManualRecordIcon,\n  }[status];\n\n  const colorClass = {\n    SUCCESS: 'text-green-600',\n    ERROR: 'text-red-600',\n    FAILURE: 'text-red-600',\n    PENDING: `text-yellow-600`,\n  }[status];\n\n  return Icon ? (\n    <span className={`ml-1 -mt-px ${colorClass}`}>\n      <Icon fontSize=\"small\" />\n    </span>\n  ) : null;\n}","import React from 'react';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport RateReviewRoundedIcon from '@material-ui/icons/RateReviewRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport MoodBadRoundedIcon from '@material-ui/icons/MoodBadRounded';\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\nimport { useStyles } from './StatusIcon.styles';\n\nexport const StatusIcon = ({ status, offset = 0, last = false, ...props }) => {\n  const styles = useStyles();\n\n  const Icon =\n    {\n      COMMENTED: ChatBubbleRoundedIcon,\n      CHANGES_REQUESTED: RateReviewRoundedIcon,\n      APPROVED: CheckRoundedIcon,\n      PENDING: AccessTimeRoundedIcon,\n      DISMISSED: ClearRoundedIcon,\n    }[status] || MoodBadRoundedIcon;\n\n  const bgClass =\n    {\n      COMMENTED: `bg-white`,\n      CHANGES_REQUESTED: `bg-red-500`,\n      APPROVED: `bg-green-600`,\n      PENDING: `bg-yellow-500`,\n      DISMISSED: `bg-purple-600`,\n    }[status] || `bg-gray-400`;\n\n  const textClass =\n    {\n      COMMENTED: `text-gray-600`,\n      CHANGES_REQUESTED: `text-red-100`,\n      APPROVED: `text-green-100`,\n      PENDING: `text-yellow-900`,\n      DISMISSED: `text-purple-100`,\n    }[status] || `text-gray-700`;\n\n  const title =\n    {\n      COMMENTED: `Commented`,\n      CHANGES_REQUESTED: `Changes Requested`,\n      APPROVED: `Approved`,\n      PENDING: `Pending`,\n      DISMISSED: 'Dismissed',\n    }[status] || `Unknown Status '${status}'`;\n\n  const leftOffset = 0.75 + offset * (last ? 0.5 : 0.4);\n\n  return (\n    <div\n      className={`${bgClass} ${textClass} ${styles.container}`}\n      style={{\n        left: `${leftOffset}rem`,\n        bottom: '-.75rem',\n        transform: !last ? 'scale(0.8)' : '',\n      }}\n      title={title}\n    >\n      <Icon className={styles.icon} fontSize=\"inherit\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        w-8 h-8 absolute\n        flex items-center justify-center\n        rounded-full shadow-lg\n    `,\n\n    icon: `\n        leading-none font-xs\n    `,\n  });\n","import React, { useMemo } from 'react';\nimport { StatusIcon } from './StatusIcon';\nimport { useStyles } from './Reviews.styles';\n\nexport const Reviews = ({ reviews }) => {\n  const styles = useStyles();\n\n  const reviewsGroupedByUser = useMemo(() => {\n    return Object.values(\n      reviews.reduce((acc, review) => {\n        if (!acc[review.author.login]) {\n          acc[review.author.login] = {\n            author: review.author,\n            reviews: [],\n          };\n        }\n\n        // Ignore comments\n        if (review.state !== 'COMMENTED') {\n          acc[review.author.login].reviews.push(review);\n        }\n\n        return acc;\n      }, {}),\n    ).filter((group) => group.reviews.length > 0);\n  }, [reviews]);\n\n  return (\n    <>\n      <div className={styles.reviews}>\n        {reviewsGroupedByUser.map(({ author, reviews }) => (\n          <div className={styles.review} key={author.login}>\n            <img\n              src={author.avatarUrl}\n              alt={author.login}\n              className={styles.reviewerAvatar}\n            />\n\n            <div>\n              {reviews.map((review, i) => (\n                <StatusIcon\n                  key={review.id}\n                  status={review.state}\n                  offset={i}\n                  last={i === reviews.length - 1}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    reviews: `\n        flex flex-row mt-3\n    `,\n\n    review: `\n        relative mr-4\n    `,\n\n    reviewerAvatar: `\n        w-10 h-10 rounded-full\n        shadow\n    `,\n\n    reviewStatus: `\n        absolute\n    `,\n  });\n","import React from 'react';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Label } from './PullRequests/Label';\nimport { useConfig } from './ConfigController/ConfigController';\n\nexport const DraftLabel = ({ plural = false }) => {\n  const { drafts } = useConfig();\n\n  return (\n    <Label\n      label={{ name: `draft${plural ? 's' : ''}`, color: 'CBD5E0' }}\n      IconComponent={AccessTimeIcon}\n      buttons={({ className, hideTooltip }) => (\n        <>\n          <button\n            className={className}\n            onClick={() => {\n              drafts.toggleWhitelisted();\n              hideTooltip();\n            }}\n          >\n            {drafts.whitelisted ? 'remove from' : 'add to'} whitelist\n          </button>\n\n          <button\n            className={className}\n            onClick={() => {\n              drafts.toggleBlacklisted();\n              hideTooltip();\n            }}\n          >\n            {drafts.blacklisted ? 'remove from' : 'add to'} blacklist\n          </button>\n        </>\n      )}\n    />\n  );\n};\n","import React, { useMemo } from 'react';\nimport { parseISO, format } from 'date-fns';\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\nimport { useStyles } from './PullRequest.styles';\nimport { Labels } from './Labels';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { BuildStatus } from './BuildStatus';\nimport { Reviews } from './Reviews';\nimport { DraftLabel } from '../DraftLabel';\n\nexport const PullRequest = ({ pullRequest }) => {\n  const styles = useStyles();\n  const { labels } = useConfig();\n\n  const created = format(parseISO(pullRequest.createdAt), 'do MMM HH:mm');\n  const updated = format(parseISO(pullRequest.updatedAt), 'do MMM HH:mm');\n\n  const buildStatus = useMemo(() => {\n    const { nodes } = pullRequest.commits;\n    const { commit } = nodes[nodes.length - 1] || { commit: null };\n\n    return commit && commit.statusCheckRollup\n      ? commit.statusCheckRollup.state\n      : null;\n  }, [pullRequest]);\n\n  return (\n    <div className={styles.pullRequest} key={pullRequest.id}>\n      <div className={styles.titleBar}>\n        <div>\n          <div className={styles.preTitle}>\n            <div className={styles.owner}>\n              <img\n                src={pullRequest.repository.owner.avatarUrl}\n                alt={pullRequest.repository.nameWithOwner}\n                className={styles.ownerAvatar}\n              />\n              <p className={styles.repo}>\n                {pullRequest.repository.nameWithOwner}\n              </p>\n            </div>\n\n            {pullRequest.isDraft && <DraftLabel />}\n\n            <Labels\n              labels={pullRequest.labels.nodes}\n              buttons={({ className, label, hideTooltip }) => {\n                const inWhitelist = labels.listHasLabel(\n                  labels.whitelist,\n                  label,\n                );\n                const inBlacklist = labels.listHasLabel(\n                  labels.blacklist,\n                  label,\n                );\n\n                return (\n                  <>\n                    <button\n                      className={className}\n                      onClick={() => {\n                        if (inWhitelist) {\n                          labels.removeFromWhitelist(label);\n                        } else {\n                          labels.addToWhitelist(label);\n                        }\n                        hideTooltip();\n                      }}\n                    >\n                      {inWhitelist ? 'remove from' : 'add to'} whitelist\n                    </button>\n                    <button\n                      className={className}\n                      onClick={() => {\n                        if (inBlacklist) {\n                          labels.removeFromBlacklist(label);\n                        } else {\n                          labels.addToBlacklist(label);\n                        }\n                        hideTooltip();\n                      }}\n                    >\n                      {inBlacklist ? 'remove from' : 'add to'} blacklist\n                    </button>\n                  </>\n                );\n              }}\n            />\n          </div>\n          <a\n            className={styles.title}\n            href={pullRequest.permalink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {pullRequest.title}\n          </a>\n        </div>\n\n        <div className={styles.author}>\n          <img\n            src={pullRequest.author.avatarUrl}\n            alt={pullRequest.author.login}\n            className={styles.authorAvatar}\n          />\n          <p className={styles.authorName}>{pullRequest.author.login}</p>\n        </div>\n      </div>\n\n      <p className={styles.branches}>\n        <span>{pullRequest.baseRefName}</span>\n        <ArrowLeftRoundedIcon />\n        <span>{pullRequest.headRefName}</span>\n      </p>\n\n      <p className={styles.timestamps}>\n        created {created}, last updated {updated}\n        <BuildStatus status={buildStatus} />\n      </p>\n\n      <Reviews reviews={pullRequest.reviews.nodes} />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequest: `\n        p-6\n        border-b border-gray-300 dark:border-gray-750\n        last:border-b-0\n    `,\n\n    preTitle: `\n        flex flex-row items-center mb-1\n    `,\n\n    owner: `\n        flex flex-row items-center\n    `,\n\n    ownerAvatar: `\n        w-6 h-6 rounded-full shadow mr-1\n    `,\n\n    repo: `\n        text-base text-gray-800 dark:text-gray-500 leading-none mr-2\n    `,\n\n    titleBar: `\n        flex flex-row justify-between items-center mb-1\n    `,\n\n    title: `\n        text-gray-900 font-semibold text-lg\n        dark:text-gray-300\n        block p-1 -mx-1\n    `,\n\n    author: `\n        inline-flex flex-row items-center\n        relative\n        bg-gray-400 dark:bg-gray-850\n        rounded-full py-2 pl-3 pr-12\n        shadow-inner\n    `,\n\n    authorAvatar: `\n        w-10 h-10 rounded-full\n        absolute right-0\n        shadow\n    `,\n\n    authorName: `\n        text-sm leading-none whitespace-no-wrap\n        text-gray-900 dark:text-gray-400\n    `,\n\n    timestamps: `\n        text-sm leading-none text-gray-700 dark:text-gray-500\n        pointer-events-none\n    `,\n\n    branches: `\n        inline-flex flex-row items-center\n        text-xs px-2 mb-2 rounded\n        bg-gray-300 text-gray-800\n        dark:bg-gray-500 dark:text-gray-900\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_PULL_REQUESTS = gql`\n  query PullRequests($query: String!, $limit: Int!) {\n    search(query: $query, type: ISSUE, last: $limit) {\n      nodes {\n        ... on PullRequest {\n          id\n          title\n          createdAt\n          updatedAt\n          permalink\n          isDraft\n          baseRefName\n          headRefName\n          author {\n            login\n            avatarUrl\n          }\n          repository {\n            nameWithOwner\n            owner {\n              avatarUrl\n            }\n          }\n          labels(first: 15) {\n            nodes {\n              name\n              color\n            }\n          }\n          reviews(last: 100) {\n            nodes {\n              id\n              createdAt\n              state\n              author {\n                login\n                avatarUrl\n              }\n            }\n          }\n          commits(last: 1) {\n            nodes {\n              commit {\n                statusCheckRollup {\n                  state\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const usePullRequests = (query, limit) => {\n  const { data, ...rest } = useQuery(GET_PULL_REQUESTS, {\n    variables: { query, limit },\n    pollInterval: 30000,\n  });\n\n  return {\n    data,\n    pullRequests: data ? data.search.nodes : null,\n    ...rest,\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { FilterModes } from '../ConfigController/useLabels';\nimport { PullRequest } from './PullRequest';\nimport { useStyles } from './PullRequests.styles';\nimport { usePullRequests } from '../../hooks/queries/usePullRequests';\n\nexport const PullRequests = () => {\n  const { selectedRepos, labels, drafts } = useConfig();\n  const styles = useStyles();\n\n  const limit = selectedRepos.repos.length < 1 ? 10 : 100;\n\n  const query = useMemo(() => {\n    const repoQuery = selectedRepos.repos\n      .map((r) => `repo:${r.nameWithOwner}`)\n      .join(' ');\n\n    const labelQuery = labels.filterEnabled\n      ? labels.filterMode === FilterModes.BLACKLIST\n        ? labels.blacklist.map((label) => `-label:\"${label.name}\"`).join(' ')\n        : labels.whitelist.map((label) => `label:\"${label.name}\"`).join(' ')\n      : '';\n\n    const draftQuery =\n      drafts.whitelisted && labels.filterMode === FilterModes.WHITELIST\n        ? 'is:draft'\n        : drafts.blacklisted && labels.filterMode === FilterModes.BLACKLIST\n        ? '-is:draft'\n        : '';\n\n    return `is:pr is:open ${repoQuery} ${labelQuery} ${draftQuery}`;\n  }, [selectedRepos.repos, labels, drafts]);\n\n  const { loading, error, pullRequests } = usePullRequests(query, limit);\n\n  return loading ? (\n    <p>Loading...</p>\n  ) : error ? (\n    <p>Something went wrong...</p>\n  ) : (\n    <div className={styles.pullRequests}>\n      {pullRequests.length > 0 ? (\n        pullRequests.map((pullRequest) => (\n          <PullRequest pullRequest={pullRequest} key={pullRequest.id} />\n        ))\n      ) : (\n        <div className={styles.empty}>\n          <p className={styles.emptyText}>No open pull requests.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequests: `\n        bg-gray-100 dark:bg-gray-800\n        border-gray-300 dark:border-gray-750\n        mb-4 shadow-sm rounded border\n    `,\n\n    empty: `\n      text-center p-8\n    `,\n\n    emptyText: `\n      text-gray-700 dark:text-gray-500\n    `,\n  });\n","import React from 'react';\nimport { Labels } from './PullRequests/Labels';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './LabelFilters.styles';\nimport { FilterModes } from './ConfigController/useLabels';\nimport { DraftLabel } from './DraftLabel';\n\nexport const LabelFilters = () => {\n  const { labels, drafts } = useConfig();\n  const {\n    filterMode,\n    filterList,\n    removeFromWhitelist,\n    removeFromBlacklist,\n    toggleFilterMode,\n    filterEnabled,\n    toggleFilter,\n  } = labels;\n  const styles = useStyles();\n\n  const listEmpty = filterList.length < 1;\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.selected}>\n          {filterEnabled ? (\n            <>\n              <p className={styles.selectedLabel}>\n                {filterMode === FilterModes.WHITELIST\n                  ? listEmpty && !drafts.whitelisted\n                    ? 'no items in whitelist'\n                    : 'showing only'\n                  : listEmpty && !drafts.blacklisted\n                  ? 'no items in blacklist'\n                  : 'hiding'}\n              </p>\n              <Labels\n                labels={filterList}\n                buttons={({ className, label }) => (\n                  <button\n                    className={className}\n                    onClick={() =>\n                      filterMode === FilterModes.WHITELIST\n                        ? removeFromWhitelist(label)\n                        : removeFromBlacklist(label)\n                    }\n                  >\n                    remove from {filterMode.toLowerCase()}\n                  </button>\n                )}\n              >\n                {(filterMode === FilterModes.WHITELIST && drafts.whitelisted) ||\n                (filterMode === FilterModes.BLACKLIST && drafts.blacklisted) ? (\n                  <DraftLabel plural />\n                ) : null}\n              </Labels>\n            </>\n          ) : null}\n        </div>\n\n        <div>\n          {filterEnabled ? (\n            <button\n              className={styles.button}\n              onClick={() => toggleFilterMode()}\n            >\n              switch to{' '}\n              {filterMode === FilterModes.WHITELIST ? 'blacklist' : 'whitelist'}{' '}\n              mode\n            </button>\n          ) : null}\n          <button className={styles.button2} onClick={() => toggleFilter()}>\n            {filterEnabled ? 'disable' : 'enable'} filter\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row justify-between\n        w-full mb-2 px-1\n    `,\n\n    selected: `\n        flex flex-row items-center\n    `,\n\n    selectedLabel: `\n        text-sm\n        mr-2 leading-none\n        text-gray-700 dark:text-gray-500\n    `,\n\n    button: `\n        text-sm\n        text-purple-600\n        focus:outline-none\n        active:font-semibold\n    `,\n\n    button2: `\n        text-sm ml-4\n        text-gray-700 dark:text-gray-500\n        focus:outline-none\n        active:font-semibold\n    `,\n  });\n","import React from 'react';\nimport { ModalProvider } from 'react-simple-hook-modal';\nimport { Apollo } from './Apollo';\nimport { Layout } from './components/Layout';\nimport { RepoPicker } from './components/RepoPicker';\nimport { ConfigController } from './components/ConfigController/ConfigController';\nimport { TokenGate } from './components/TokenGate';\nimport { PullRequests } from './components/PullRequests/PullRequests';\nimport { LabelFilters } from './components/LabelFilters';\n\nimport 'react-simple-hook-modal/dist/styles.css';\n\nexport const App = () => {\n  return (\n    <ModalProvider>\n      <ConfigController>\n        <Layout>\n          <TokenGate>\n            <Apollo>\n              <RepoPicker />\n\n              <LabelFilters />\n\n              <PullRequests />\n            </Apollo>\n          </TokenGate>\n        </Layout>\n      </ConfigController>\n    </ModalProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}