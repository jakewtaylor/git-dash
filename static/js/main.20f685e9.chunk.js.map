{"version":3,"sources":["hooks/useRememberedState.js","components/ConfigController/ConfigKeys.js","components/ConfigController/useLabels.js","components/ConfigController/ConfigController.js","components/ConfigController/useAuth.js","components/ConfigController/useSelectedRepos.js","helpers/mapToGroups.js","Apollo.js","hooks/useTailwind.js","components/Layout.js","components/Layout.styles.js","hooks/queries/useUserRepos.js","components/RepoList.js","components/RepoList.styles.js","components/RepoPicker.js","components/RepoPicker.styles.js","components/TokenGate.js","components/TokenGate.styles.js","components/PullRequests/StatusIcon.js","components/PullRequests/StatusIcon.styles.js","hooks/useContrastingColor.js","hooks/useOnClickOutside.js","components/PullRequests/Label.js","components/PullRequests/Label.styles.js","components/PullRequests/Labels.js","components/PullRequests/Labels.styles.js","components/PullRequests/PullRequest.js","components/PullRequests/PullRequest.styles.js","hooks/queries/usePullRequests.js","components/PullRequests/PullRequests.js","components/PullRequests/PullRequests.styles.js","components/LabelFilters.js","components/LabelFilters.styles.js","index.js","App.js"],"names":["loadState","key","initial","str","stored","localStorage","getItem","JSON","parse","saveState","value","setItem","obj","stringify","useRememberedState","name","useRef","useState","current","state","setState","useEffect","ConfigKeys","FilterModes","ConfigContext","createContext","useConfig","useContext","ConfigController","children","auth","token","setToken","useMemo","useAuth","selectedRepos","repos","setRepos","groupedRepos","keyGetter","repo","owner","login","reduce","acc","item","index","push","repoKeys","map","nameWithOwner","containsRepo","includes","addRepo","rs","removeRepo","filter","r","useSelectedRepos","labels","filterMode","setFilterMode","whitelist","setWhitelist","blacklist","setBlacklist","toggleFilterMode","WHITELIST","BLACKLIST","f","addToWhitelist","label","wl","clearWhitelist","removeFromWhitelist","l","addToBlacklist","bl","clearBlacklist","removeFromBlacklist","useLabels","config","Provider","Apollo","cache","InMemoryCache","link","HttpLink","uri","headers","authorization","client","ApolloClient","useTailwind","styleSheet","Object","entries","styles","Array","isArray","join","Layout","container","className","USER_REPOS","gql","RepoList","onRepoClick","removable","imageContainer","removeOverlay","removeIcon","image","text","TransitionGroup","CSSTransition","timeout","classNames","onClick","src","avatarUrl","alt","RepoPicker","onChoose","useQuery","data","rest","viewer","repositories","nodes","useUserRepos","loading","error","e","preventDefault","length","TokenGate","form","input","button","href","target","rel","onSubmit","type","onChange","placeholder","StatusIcon","status","icon","Icon","COMMENTED","ChatBubbleRoundedIcon","CHANGES_REQUESTED","RateReviewRoundedIcon","APPROVED","CheckRoundedIcon","PENDING","AccessTimeRoundedIcon","bgClass","textClass","style","right","bottom","fontSize","getContrastingColor","color","hex","fullHex","replace","m","g","b","exec","n","parseInt","hexToRgb","Math","round","useOnClickOutside","ref","handler","refsOrRef","els","HTMLElement","handleClick","some","el","contains","document","addEventListener","removeEventListener","Label","buttons","tag","tooltipWrapper","tooltip","showTooltip","setShowTooltip","useCallback","disabled","background","transform","display","Labels","PullRequest","pullRequest","preTitle","ownerAvatar","titleBar","title","author","authorAvatar","authorName","timestamps","reviewers","review","reviewerAvatar","reviewStatus","created","format","parseISO","createdAt","updated","updatedAt","id","repository","permalink","reviews","GET_PULL_REQUESTS","PullRequests","pullRequests","limit","query","variables","pollInterval","search","usePullRequests","repoQuery","labelQuery","LabelFilters","section","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.20f685e9.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nconst serialize = obj => JSON.stringify(obj);\nconst deserialze = str => JSON.parse(str);\n\nconst loadState = (key, initial) => {\n  const stored = localStorage.getItem(key);\n\n  return stored ? deserialze(stored) : initial;\n};\n\nconst saveState = (key, value) => localStorage.setItem(key, serialize(value));\n\nexport const useRememberedState = (name, initial) => {\n  const key = useRef(name);\n\n  const [state, setState] = useState(() => loadState(key.current, initial));\n\n  useEffect(() => {\n    saveState(key.current, state);\n  }, [state]);\n\n  return [state, setState];\n};\n","export const ConfigKeys = {\n  AUTH: 'AUTH',\n  SELECTED_REPOS: 'SELECTED_REPOS',\n  LABEL_WHITELIST: 'LABEL_WHITELIST',\n  LABEL_BLACKLIST: 'LABEL_BLACKLIST',\n  LABEL_FILTER_MODE: 'LABEL_FILTER_MODE',\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo } from 'react';\n\nexport const FilterModes = {\n  WHITELIST: 'WHITELIST',\n  BLACKLIST: 'BLACKLIST',\n};\n\nexport const useLabels = () => {\n  const [filterMode, setFilterMode] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_MODE,\n    FilterModes.BLACKLIST,\n  );\n\n  const [whitelist, setWhitelist] = useRememberedState(\n    ConfigKeys.LABEL_WHITELIST,\n    [],\n  );\n\n  const [blacklist, setBlacklist] = useRememberedState(\n    ConfigKeys.LABEL_BLACKLIST,\n    [],\n  );\n\n  return useMemo(\n    () => ({\n      whitelist,\n      blacklist,\n      filterMode,\n\n      toggleFilterMode() {\n        const { WHITELIST, BLACKLIST } = FilterModes;\n        setFilterMode(f => (f === WHITELIST ? BLACKLIST : WHITELIST));\n      },\n\n      addToWhitelist(label) {\n        setWhitelist(wl => [...wl, label]);\n      },\n\n      clearWhitelist() {\n        setWhitelist([]);\n      },\n\n      removeFromWhitelist(label) {\n        setWhitelist(wl => wl.filter(l => l.name !== label.name));\n      },\n\n      addToBlacklist(label) {\n        setBlacklist(bl => [...bl, label]);\n      },\n\n      clearBlacklist() {\n        setBlacklist([]);\n      },\n\n      removeFromBlacklist(label) {\n        setBlacklist(bl => bl.filter(l => l.name !== label.name));\n      },\n    }),\n    [\n      whitelist,\n      blacklist,\n      setWhitelist,\n      setBlacklist,\n      filterMode,\n      setFilterMode,\n    ],\n  );\n};\n","import React, { createContext, useContext, useMemo } from 'react';\nimport { useSelectedRepos } from './useSelectedRepos';\nimport { useAuth } from './useAuth';\nimport { useLabels } from './useLabels';\n\nconst ConfigContext = createContext();\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const ConfigController = ({ children }) => {\n  const auth = useAuth();\n  const selectedRepos = useSelectedRepos();\n  const labels = useLabels();\n\n  const config = useMemo(() => ({ auth, selectedRepos, labels }), [\n    auth,\n    selectedRepos,\n    labels,\n  ]);\n\n  return (\n    <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n  );\n};\n","import { ConfigKeys } from './ConfigKeys';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { useMemo } from 'react';\n\nexport const useAuth = () => {\n  const [token, setToken] = useRememberedState(ConfigKeys.AUTH, '');\n\n  return useMemo(\n    () => ({\n      token,\n      setToken,\n    }),\n    [token, setToken],\n  );\n};\n","import { useMemo } from 'react';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { mapToGroups } from '../../helpers/mapToGroups';\n\nexport const useSelectedRepos = () => {\n  const [repos, setRepos] = useRememberedState(ConfigKeys.SELECTED_REPOS, []);\n\n  const groupedRepos = useMemo(\n    () => mapToGroups(repos, repo => repo.owner.login),\n    [repos],\n  );\n\n  const repoKeys = useMemo(() => repos.map(repo => repo.nameWithOwner), [\n    repos,\n  ]);\n\n  return useMemo(\n    () => ({\n      repos,\n      groupedRepos,\n      repoKeys,\n\n      containsRepo(repo) {\n        return repoKeys.includes(repo.nameWithOwner);\n      },\n\n      addRepo(repo) {\n        setRepos(rs => [...rs, repo]);\n      },\n\n      removeRepo(repo) {\n        setRepos(rs => rs.filter(r => r.nameWithOwner !== repo.nameWithOwner));\n      },\n    }),\n    [repos, groupedRepos, repoKeys, setRepos],\n  );\n};\n","export const mapToGroups = (arr, keyGetter) =>\n  arr.reduce((acc, item, index) => {\n    const key = keyGetter(item, index);\n\n    if (acc[key]) {\n      acc[key].push(item);\n    } else {\n      acc[key] = [item];\n    }\n\n    return acc;\n  }, {});\n","import React, { useMemo } from 'react';\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useConfig } from './components/ConfigController/ConfigController';\n\nexport const Apollo = ({ children }) => {\n  const {\n    auth: { token },\n  } = useConfig();\n\n  const cache = useMemo(() => new InMemoryCache(), []);\n  const link = useMemo(\n    () =>\n      new HttpLink({\n        uri: 'https://api.github.com/graphql',\n        headers: {\n          authorization: `bearer ${token}`,\n        },\n      }),\n    [token],\n  );\n\n  const client = useMemo(() => new ApolloClient({ link, cache }), [\n    link,\n    cache,\n  ]);\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n","import { useMemo } from 'react';\n\nexport const useTailwind = styleSheet => {\n  return useMemo(() => {\n    return Object.entries(styleSheet).reduce((acc, [key, styles]) => {\n      acc[key] = Array.isArray(styles) ? styles.join(' ') : styles;\n\n      return acc;\n    }, {});\n  }, [styleSheet]);\n};\n","import React from 'react';\nimport { useStyles } from './Layout.styles';\n\nexport const Layout = ({ children }) => {\n  const styles = useStyles();\n\n  return <div className={styles.container}>{children}</div>;\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n      px-8 max-w-5xl mx-auto h-full\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst USER_REPOS = gql`\n  {\n    viewer {\n      repositories(\n        first: 12\n        affiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        ownerAffiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        orderBy: { field: UPDATED_AT, direction: DESC }\n      ) {\n        nodes {\n          name\n          nameWithOwner\n          owner {\n            login\n            avatarUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useUserRepos = () => {\n  const { data, ...rest } = useQuery(USER_REPOS);\n\n  return {\n    data,\n    repos: data ? data.viewer.repositories.nodes : null,\n    ...rest,\n  };\n};\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useStyles } from './RepoList.styles';\n\nimport './RepoList.css';\n\nexport const RepoList = ({ repos, onRepoClick = null, removable = false }) => {\n  const styles = useStyles();\n\n  return (\n    <TransitionGroup className={styles.repos}>\n      {repos.map(repo => (\n        <CSSTransition key={repo.nameWithOwner} timeout={200} classNames=\"item\">\n          <button\n            className={styles.repo}\n            onClick={onRepoClick ? onRepoClick(repo) : null}\n          >\n            <div className={styles.imageContainer}>\n              <img\n                src={repo.owner.avatarUrl}\n                className={styles.image}\n                alt={repo.nameWithOwner}\n              />\n\n              {removable ? (\n                <div className={styles.removeOverlay}>\n                  <p className={styles.removeIcon}>✕</p>\n                </div>\n              ) : null}\n            </div>\n            <p className={styles.text}>{repo.nameWithOwner}</p>\n          </button>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    repos: `\n        flex flex-row items-center justify-center flex-wrap\n    `,\n\n    repo: `\n        bg-gray-400 inline-block whitespace-no-wrap\n        m-1 rounded-full p-1 pr-3\n        flex flex-row items-center\n        text-gray-800\n\n        hover:bg-gray-500\n        focus:outline-none\n        focus:bg-purple-300\n\n        focus:text-purple-800\n    `,\n\n    imageContainer: `\n        relative mr-2 rounded-full overflow-hidden\n    `,\n\n    removeOverlay: `\n        absolute top-0 bottom-0 right-0 left-0\n        bg-gray-600\n        flex items-center justify-center\n        opacity-75\n    `,\n\n    removeIcon: 'text-gray-200 text-xs leading-none',\n\n    image: `\n        w-6 h-6\n    `,\n\n    text: `\n        text-sm leading-none font-semibold\n    `,\n  });\n","import React from 'react';\nimport { useUserRepos } from '../hooks/queries/useUserRepos';\n\nimport { useConfig } from './ConfigController/ConfigController';\nimport { RepoList } from './RepoList';\nimport { useStyles } from './RepoPicker.styles';\n\nexport const RepoPicker = ({ onChoose }) => {\n  const { loading, repos, error } = useUserRepos();\n  const { selectedRepos } = useConfig();\n  const styles = useStyles();\n\n  const handleChoose = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.addRepo(repo);\n  };\n\n  const removeRepo = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.removeRepo(repo);\n  };\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Get started by picking some repos you want to see:\n      </p>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>something went wrong...</p>\n      ) : (\n        <>\n          <RepoList\n            repos={repos.filter(r => !selectedRepos.containsRepo(r))}\n            onRepoClick={handleChoose}\n          />\n\n          {selectedRepos.repos.length > 0 ? (\n            <>\n              <p className={styles.text}>Selected:</p>\n              <RepoList\n                repos={selectedRepos.repos}\n                onRepoClick={removeRepo}\n                removable\n              />\n            </>\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    text: `\n        mb-2 mt-4 text-gray-900 font-light\n    `,\n  });\n","import React, { useState } from 'react';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './TokenGate.styles';\n\nexport const TokenGate = ({ children }) => {\n  const { auth } = useConfig();\n  const styles = useStyles();\n\n  const [token, setToken] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    auth.setToken(token);\n  };\n\n  return auth.token ? (\n    children\n  ) : (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Welcome! Before you can get started, you need to supply us with a\n        Personal Access Token so we can see your repositories.\n        <br />\n        <a\n          href=\"https://github.com/settings/tokens/new?scopes=repo&description=git-dash\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={styles.link}\n        >\n          Click here to generate one on Github.\n        </a>\n      </p>\n\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          value={token}\n          onChange={e => setToken(e.target.value)}\n          placeholder=\"Paste PAT Here\"\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.button}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-col items-center justify-center h-full\n    `,\n\n    text: `\n        text-center max-w-md\n        text-gray-800 mb-4\n    `,\n\n    link: `\n        text-purple-600 font-semibold\n    `,\n\n    form: `\n        shadow-lg rounded\n    `,\n\n    input: `\n        w-56 h-12 px-4 rounded-l\n        border border-gray-400 border-r-0\n        focus:outline-none\n        focus:border-purple-600\n    `,\n\n    button: `\n        h-12 px-4 bg-purple-600 text-purple-100 rounded-r\n        border border-purple-800 border-l-0\n    `,\n  });\n","import React from 'react';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport RateReviewRoundedIcon from '@material-ui/icons/RateReviewRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport { useStyles } from './StatusIcon.styles';\n\nexport const StatusIcon = ({ status, ...props }) => {\n  const styles = useStyles();\n  const Icon = {\n    COMMENTED: ChatBubbleRoundedIcon,\n    CHANGES_REQUESTED: RateReviewRoundedIcon,\n    APPROVED: CheckRoundedIcon,\n    PENDING: AccessTimeRoundedIcon,\n  }[status];\n\n  const bgClass = {\n    COMMENTED: `bg-white`,\n    CHANGES_REQUESTED: `bg-red-500`,\n    APPROVED: `bg-green-600`,\n    PENDING: `bg-yellow-500`,\n  }[status];\n\n  const textClass = {\n    COMMENTED: `text-gray-600`,\n    CHANGES_REQUESTED: `text-red-100`,\n    APPROVED: `text-green-100`,\n    PENDING: `text-yellow-900`,\n  }[status];\n\n  return (\n    <div\n      className={`${bgClass} ${textClass} ${styles.container}`}\n      style={{ right: '-.75rem', bottom: '-.75rem' }}\n    >\n      <Icon className={styles.icon} fontSize=\"inherit\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        w-8 h-8 absolute\n        flex items-center justify-center\n        rounded-full shadow\n    `,\n\n    icon: `\n        leading-none font-xs\n    `,\n  });\n","import { useMemo } from 'react';\n\nconst hexToRgb = hex => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const fullHex = hex.replace(shorthandRegex, (m, r, g, b) =>\n    [r, r, g, g, b, b].join(''),\n  );\n\n  const [, r, g, b] = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHex);\n\n  return [r, g, b].map(n => parseInt(n, 16));\n};\n\nexport const getContrastingColor = color => {\n  const [r, g, b] = hexToRgb(color);\n\n  const o = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n  return o > 125 ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.9)';\n};\n\nexport const useContrastingColor = color =>\n  useMemo(() => {\n    return getContrastingColor(color);\n  }, [color]);\n","import { useEffect } from 'react';\n\n// converts a single ref, element or array into\n// an array of corresponding elements\nconst toEls = refsOrRef => {\n  const refs = Array.isArray(refsOrRef) ? refsOrRef : [refsOrRef];\n\n  const toEl = ref => (ref instanceof HTMLElement || !ref ? ref : ref.current);\n\n  return refs.map(toEl);\n};\n\n// `ref` is either a single ref, element or an array of either\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const els = toEls(ref);\n\n    const handleClick = e => {\n      const contained = els.some(el => {\n        return el && el.contains(e.target);\n      });\n\n      if (!contained) {\n        handler(e);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [ref, handler]);\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getContrastingColor } from '../../hooks/useContrastingColor';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useStyles } from './Label.styles';\n\nexport const Label = ({ label, buttons = null }) => {\n  const styles = useStyles();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltip = useRef();\n\n  useOnClickOutside(\n    tooltip,\n    useCallback(() => {\n      setShowTooltip(false);\n    }, []),\n  );\n\n  return (\n    <div className={styles.container}>\n      <button\n        onClick={() => setShowTooltip(true)}\n        disabled={!buttons}\n        className={styles.tag}\n        style={{\n          background: `#${label.color}`,\n          color: getContrastingColor(label.color),\n        }}\n      >\n        {label.name}\n      </button>\n\n      <div\n        ref={tooltip}\n        className={styles.tooltipWrapper}\n        style={{\n          transform: 'translateX(-50%)',\n          display: showTooltip && buttons ? 'block' : 'none',\n        }}\n      >\n        {buttons ? (\n          <div className={styles.tooltip}>\n            {buttons({\n              className: styles.button,\n              label,\n            })}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        relative mr-1\n    `,\n\n    tag: `\n        leading-none text-xs px-2 py-1\n        rounded-full font-semibold\n        shadow-inner\n        focus:outline-none\n        focus:opacity-75\n        hover:shadow\n    `,\n\n    tooltipWrapper: `\n        absolute bottom-full left-1/2 pb-1\n    `,\n\n    tooltip: `\n        bg-white rounded border border-gray-300\n        shadow-lg py-2 w-32 flex flex-col\n    `,\n\n    button: `\n        leading-none px-4 py-2 text-sm text-gray-700\n        hover:bg-purple-300 hover:text-purple-800\n        focus:outline-none\n        focus:bg-gray-200\n    `,\n  });\n","import React from 'react';\nimport { useStyles } from './Labels.styles';\nimport { Label } from './Label';\n\nexport const Labels = ({ labels, buttons = null }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      {labels.map(label => (\n        <Label key={label.name} label={label} buttons={buttons} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center\n    `,\n  });\n","import React from 'react';\nimport { parseISO, format } from 'date-fns';\nimport { useStyles } from './PullRequest.styles';\nimport { StatusIcon } from './StatusIcon';\nimport { Labels } from './Labels';\nimport { useConfig } from '../ConfigController/ConfigController';\n\nexport const PullRequest = ({ pullRequest }) => {\n  const styles = useStyles();\n  const { labels } = useConfig();\n\n  const created = format(parseISO(pullRequest.createdAt), 'do MMM HH:mm');\n  const updated = format(parseISO(pullRequest.updatedAt), 'do MMM HH:mm');\n\n  return (\n    <div className={styles.pullRequest} key={pullRequest.id}>\n      <div className={styles.titleBar}>\n        <div>\n          <div className={styles.preTitle}>\n            <div className={styles.owner}>\n              <img\n                src={pullRequest.repository.owner.avatarUrl}\n                alt={pullRequest.repository.nameWithOwner}\n                className={styles.ownerAvatar}\n              />\n              <p className={styles.repo}>\n                {pullRequest.repository.nameWithOwner}\n              </p>\n            </div>\n\n            <Labels\n              labels={pullRequest.labels.nodes}\n              buttons={({ className, label }) => (\n                <>\n                  <button\n                    className={className}\n                    onClick={() => labels.addToWhitelist(label)}\n                  >\n                    Whitelist\n                  </button>\n                  <button\n                    className={className}\n                    onClick={() => labels.addToBlacklist(label)}\n                  >\n                    Blacklist\n                  </button>\n                </>\n              )}\n            />\n          </div>\n          <p className={styles.title}>\n            <a\n              href={pullRequest.permalink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {pullRequest.title}\n            </a>\n          </p>\n        </div>\n\n        <div className={styles.author}>\n          <img\n            src={pullRequest.author.avatarUrl}\n            alt={pullRequest.author.login}\n            className={styles.authorAvatar}\n          />\n          <p className={styles.authorName}>{pullRequest.author.login}</p>\n        </div>\n      </div>\n\n      <p className={styles.timestamps}>\n        created {created}, last updated {updated}\n      </p>\n\n      <div className={styles.reviewers}>\n        {pullRequest.reviews.nodes\n          .filter(review => review.state !== 'COMMENTED')\n          .map(review => (\n            <div\n              className={styles.review}\n              key={review.id}\n              title={`Created ${format(\n                parseISO(review.createdAt),\n                'do MMM HH:mm',\n              )}`}\n            >\n              <img\n                src={review.author.avatarUrl}\n                alt={review.author.login}\n                className={styles.reviewerAvatar}\n              />\n              <StatusIcon status={review.state} />\n            </div>\n          ))}\n      </div>\n\n      {/* <pullRequeste>{JSON.stringify(pullRequest, null, 2)}</pullRequeste> */}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequest: `\n        p-6\n        border-b border-gray-300\n    `,\n\n    preTitle: `\n        flex flex-row items-center mb-2\n    `,\n\n    owner: `\n        flex flex-row items-center\n    `,\n\n    ownerAvatar: `\n        w-6 h-6 rounded-full shadow mr-1\n    `,\n\n    repo: `\n        text-base text-gray-800 leading-none mr-2\n    `,\n\n    titleBar: `\n        flex flex-row justify-between items-center mb-1\n    `,\n\n    title: `\n        text-gray-900 font-semibold text-lg\n    `,\n\n    author: `\n        inline-flex flex-row items-center\n        relative\n        bg-gray-400 rounded-full py-2 pl-3 pr-12\n        shadow-inner\n    `,\n\n    authorAvatar: `\n        w-10 h-10 rounded-full\n        absolute right-0\n        shadow\n    `,\n\n    authorName: `\n        text-sm leading-none text-gray-900 whitespace-no-wrap\n    `,\n\n    timestamps: `\n        text-sm leading-none text-gray-700\n    `,\n\n    reviewers: `\n        flex flex-row mt-3\n    `,\n\n    review: `\n        relative mr-4\n    `,\n\n    reviewerAvatar: `\n        w-10 h-10 rounded-full\n        shadow\n    `,\n\n    reviewStatus: `\n        absolute\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_PULL_REQUESTS = gql`\n  query PullRequests($query: String!, $limit: Int!) {\n    search(query: $query, type: ISSUE, last: $limit) {\n      nodes {\n        ... on PullRequest {\n          id\n          title\n          createdAt\n          updatedAt\n          permalink\n          author {\n            login\n            avatarUrl\n          }\n          repository {\n            nameWithOwner\n            owner {\n              avatarUrl\n            }\n          }\n          labels(first: 15) {\n            nodes {\n              name\n              color\n            }\n          }\n          reviews(last: 100) {\n            nodes {\n              id\n              createdAt\n              state\n              author {\n                login\n                avatarUrl\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const usePullRequests = (query, limit) => {\n  const { data, ...rest } = useQuery(GET_PULL_REQUESTS, {\n    variables: { query, limit },\n    pollInterval: 30000,\n  });\n\n  return {\n    data,\n    pullRequests: data ? data.search.nodes : null,\n    ...rest,\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { FilterModes } from '../ConfigController/useLabels';\nimport { PullRequest } from './PullRequest';\nimport { useStyles } from './PullRequests.styles';\nimport { usePullRequests } from '../../hooks/queries/usePullRequests';\n\nexport const PullRequests = () => {\n  const { selectedRepos, labels } = useConfig();\n  const styles = useStyles();\n\n  const limit = selectedRepos.repos.length < 1 ? 10 : 100;\n\n  const query = useMemo(() => {\n    const repoQuery = selectedRepos.repos\n      .map(r => `repo:${r.nameWithOwner}`)\n      .join(' ');\n\n    const labelQuery =\n      labels.filterMode === FilterModes.BLACKLIST\n        ? labels.blacklist.map(label => `-label:\"${label.name}\"`).join(' ')\n        : labels.whitelist.map(label => `label:\"${label.name}\"`).join(' ');\n\n    return `is:pr is:open ${repoQuery} ${labelQuery}`;\n  }, [selectedRepos.repos, labels]);\n\n  const { loading, error, pullRequests } = usePullRequests(query, limit);\n\n  return loading ? (\n    <p>Loading...</p>\n  ) : error ? (\n    <p>Something went wrong...</p>\n  ) : (\n    <div className={styles.pullRequests}>\n      {pullRequests.map(pullRequest => (\n        <PullRequest pullRequest={pullRequest} key={pullRequest.id} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequests: `\n        bg-gray-100 my-4 shadow-sm rounded border border-gray-300\n    `,\n  });\n","import React from 'react';\nimport { Labels } from './PullRequests/Labels';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './LabelFilters.styles';\n\nexport const LabelFilters = () => {\n  const { labels } = useConfig();\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.section}>\n        <p className={styles.text}>mode: {labels.filterMode}</p>\n        <button onClick={labels.toggleFilterMode} className={styles.button}>\n          toggle\n        </button>\n      </div>\n\n      <div className={styles.section}>\n        <p className={styles.text}>whitelist:</p>\n        <Labels\n          labels={labels.whitelist}\n          buttons={({ className, label }) => (\n            <button\n              className={className}\n              onClick={() => labels.removeFromWhitelist(label)}\n            >\n              Remove\n            </button>\n          )}\n        />\n        <button onClick={labels.clearWhitelist} className={styles.button}>\n          clear\n        </button>\n      </div>\n\n      <div className={styles.section}>\n        <p className={styles.text}>blacklist:</p>\n        <Labels\n          labels={labels.blacklist}\n          buttons={({ className, label }) => (\n            <button\n              className={className}\n              onClick={() => labels.removeFromBlacklist(label)}\n            >\n              Remove\n            </button>\n          )}\n        />\n        <button onClick={labels.clearBlacklist} className={styles.button}>\n          clear\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        p-4 pb-0 bg-gray-100 shadow-sm rounded border bordery-gray-300\n        mt-4\n    `,\n\n    section: `\n        pb-4\n    `,\n\n    text: `\n        text-gray-900 font-light\n    `,\n\n    button: `\n        rounded bg-gray-400 leading-none\n        p-2 mt-1\n    `,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { Apollo } from './Apollo';\nimport { Layout } from './components/Layout';\nimport { RepoPicker } from './components/RepoPicker';\nimport { ConfigController } from './components/ConfigController/ConfigController';\nimport { TokenGate } from './components/TokenGate';\nimport { PullRequests } from './components/PullRequests/PullRequests';\nimport { LabelFilters } from './components/LabelFilters';\n\nexport const App = () => {\n  return (\n    <ConfigController>\n      <Layout>\n        <TokenGate>\n          <Apollo>\n            <RepoPicker />\n\n            <LabelFilters />\n\n            <PullRequests />\n          </Apollo>\n        </TokenGate>\n      </Layout>\n    </ConfigController>\n  );\n};\n"],"sourceRoot":""}