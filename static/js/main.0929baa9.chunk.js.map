{"version":3,"sources":["hooks/useRememberedState.js","components/ConfigController/ConfigKeys.js","components/ConfigController/useLabels.js","components/ConfigController/useDarkMode.js","components/ConfigController/ConfigController.js","components/ConfigController/useAuth.js","components/ConfigController/useSelectedRepos.js","helpers/mapToGroups.js","Apollo.js","hooks/useTailwind.js","components/Layout.js","components/Layout.styles.js","hooks/queries/useUserRepos.js","components/RepoList.js","components/RepoList.styles.js","components/RepoPickerToggle.js","components/RepoPickrToggle.styles.js","components/DarkModeToggle.js","components/DarkModeToggle.styles.js","components/RepoPicker.js","components/RepoPicker.styles.js","components/TokenGate.js","components/TokenGate.styles.js","hooks/useContrastingColor.js","hooks/useOnClickOutside.js","components/PullRequests/Label.js","components/PullRequests/Label.styles.js","components/PullRequests/Labels.js","components/PullRequests/Labels.styles.js","components/PullRequests/BuildStatus.js","components/PullRequests/StatusIcon.js","components/PullRequests/StatusIcon.styles.js","components/PullRequests/Reviews.js","components/PullRequests/Reviews.styles.js","components/PullRequests/PullRequest.js","components/PullRequests/PullRequest.styles.js","hooks/queries/usePullRequests.js","components/PullRequests/PullRequests.js","components/PullRequests/PullRequests.styles.js","components/LabelFilters.js","components/LabelFilters.styles.js","App.js","index.js"],"names":["loadState","key","initial","str","stored","localStorage","getItem","JSON","parse","saveState","value","setItem","obj","stringify","useRememberedState","name","useRef","useState","current","state","setState","useEffect","ConfigKeys","FilterModes","useDarkMode","window","matchMedia","matches","isDarkMode","setIsDarkMode","document","documentElement","classList","add","remove","useMemo","toggleDarkMode","v","ConfigContext","createContext","useConfig","useContext","ConfigController","children","auth","token","setToken","useAuth","selectedRepos","repos","setRepos","groupedRepos","keyGetter","repo","owner","login","reduce","acc","item","index","push","repoKeys","map","nameWithOwner","containsRepo","includes","addRepo","rs","removeRepo","filter","r","useSelectedRepos","labels","BLACKLIST","WHITELIST","filterEnabled","setFilterEnabled","filterMode","setFilterMode","whitelist","setWhitelist","blacklist","setBlacklist","addToList","useCallback","label","list","findIndex","l","filterList","listHasLabel","toggleFilter","toggleFilterMode","f","addToWhitelist","clearWhitelist","removeFromWhitelist","wl","addToBlacklist","clearBlacklist","removeFromBlacklist","bl","useLabels","darkMode","config","Provider","Apollo","cache","InMemoryCache","link","HttpLink","uri","headers","authorization","client","ApolloClient","useTailwind","styleSheet","Object","entries","styles","Array","isArray","join","Layout","container","className","USER_REPOS","gql","RepoList","onRepoClick","removable","imageContainer","removeOverlay","removeIcon","image","text","TransitionGroup","CSSTransition","timeout","classNames","onClick","src","avatarUrl","alt","RepoPickerToggle","open","selectedCount","button","icon","count","DarkModeToggle","switch","knob","knobInactive","fontSize","knobActive","RepoPicker","onChoose","useQuery","data","rest","viewer","repositories","nodes","useUserRepos","loading","error","setOpen","barWrapper","length","o","in","unmountOnExit","e","preventDefault","TokenGate","form","input","href","target","rel","onSubmit","type","onChange","placeholder","getContrastingColor","color","hex","fullHex","replace","m","g","b","exec","n","parseInt","hexToRgb","Math","round","useOnClickOutside","ref","handler","refsOrRef","els","HTMLElement","handleClick","some","el","contains","addEventListener","removeEventListener","Label","buttons","IconComponent","tag","tooltipWrapper","tooltip","showTooltip","setShowTooltip","disabled","style","background","transform","display","hideTooltip","Labels","BuildStatus","status","Icon","SUCCESS","CheckRoundedIcon","ERROR","CloseRoundedIcon","FAILURE","PENDING","FiberManualRecordIcon","colorClass","StatusIcon","offset","last","COMMENTED","ChatBubbleRoundedIcon","CHANGES_REQUESTED","RateReviewRoundedIcon","APPROVED","AccessTimeRoundedIcon","DISMISSED","ClearRoundedIcon","MoodBadRoundedIcon","bgClass","textClass","title","leftOffset","left","bottom","Reviews","reviews","review","reviewerAvatar","reviewStatus","reviewsGroupedByUser","values","author","group","i","id","PullRequest","pullRequest","preTitle","ownerAvatar","titleBar","authorAvatar","authorName","timestamps","branches","created","format","parseISO","createdAt","updated","updatedAt","buildStatus","commits","commit","statusCheckRollup","repository","isDraft","AccessTimeIcon","inWhitelist","inBlacklist","permalink","baseRefName","headRefName","GET_PULL_REQUESTS","PullRequests","pullRequests","empty","emptyText","limit","query","variables","pollInterval","search","usePullRequests","repoQuery","labelQuery","LabelFilters","selected","selectedLabel","button2","listEmpty","toLowerCase","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0929baa9.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nconst serialize = obj => JSON.stringify(obj);\nconst deserialze = str => JSON.parse(str);\n\nconst loadState = (key, initial) => {\n  const stored = localStorage.getItem(key);\n\n  return stored ? deserialze(stored) : initial;\n};\n\nconst saveState = (key, value) => localStorage.setItem(key, serialize(value));\n\nexport const useRememberedState = (name, initial) => {\n  const key = useRef(name);\n\n  const [state, setState] = useState(() => loadState(key.current, initial));\n\n  useEffect(() => {\n    saveState(key.current, state);\n  }, [state]);\n\n  return [state, setState];\n};\n","export const ConfigKeys = {\n  AUTH: 'AUTH',\n  SELECTED_REPOS: 'SELECTED_REPOS',\n  LABEL_WHITELIST: 'LABEL_WHITELIST',\n  LABEL_BLACKLIST: 'LABEL_BLACKLIST',\n  LABEL_FILTER_ENABLED: 'LABEL_FILTER_ENABLED',\n  LABEL_FILTER_MODE: 'LABEL_FILTER_MODE',\n  DARK_MODE: 'DARK_MODE',\n  REPO_PICKER_OPEN: 'REPO_PICKER_OPEN',\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo, useCallback } from 'react';\n\nexport const FilterModes = {\n  WHITELIST: 'WHITELIST',\n  BLACKLIST: 'BLACKLIST',\n};\n\nexport const useLabels = () => {\n  const { BLACKLIST, WHITELIST } = FilterModes;\n  const [filterEnabled, setFilterEnabled] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_ENABLED,\n    false,\n  );\n\n  const [filterMode, setFilterMode] = useRememberedState(\n    ConfigKeys.LABEL_FILTER_MODE,\n    BLACKLIST,\n  );\n\n  const [whitelist, setWhitelist] = useRememberedState(\n    ConfigKeys.LABEL_WHITELIST,\n    [],\n  );\n\n  const [blacklist, setBlacklist] = useRememberedState(\n    ConfigKeys.LABEL_BLACKLIST,\n    [],\n  );\n\n  const addToList = useCallback(\n    label => list => {\n      const isDuplicate = list.findIndex(l => l.name === label.name) >= 0;\n\n      return isDuplicate ? list : [...list, label];\n    },\n    [],\n  );\n\n  return useMemo(\n    () => ({\n      whitelist,\n      blacklist,\n      filterMode,\n      filterList: filterMode === WHITELIST ? whitelist : blacklist,\n      filterEnabled,\n\n      listHasLabel(list, label) {\n        return list.findIndex(l => l.name === label.name) >= 0;\n      },\n\n      toggleFilter() {\n        setFilterEnabled(v => !v);\n      },\n\n      toggleFilterMode() {\n        setFilterMode(f => (f === WHITELIST ? BLACKLIST : WHITELIST));\n      },\n\n      addToWhitelist(label) {\n        setWhitelist(addToList(label));\n      },\n\n      clearWhitelist() {\n        setWhitelist([]);\n      },\n\n      removeFromWhitelist(label) {\n        setWhitelist(wl => wl.filter(l => l.name !== label.name));\n      },\n\n      addToBlacklist(label) {\n        setBlacklist(addToList(label));\n      },\n\n      clearBlacklist() {\n        setBlacklist([]);\n      },\n\n      removeFromBlacklist(label) {\n        setBlacklist(bl => bl.filter(l => l.name !== label.name));\n      },\n    }),\n    [\n      whitelist,\n      blacklist,\n      setWhitelist,\n      setBlacklist,\n      filterMode,\n      setFilterMode,\n      filterEnabled,\n      setFilterEnabled,\n      BLACKLIST,\n      WHITELIST,\n      addToList,\n    ],\n  );\n};\n","import { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { useMemo, useEffect } from 'react';\n\nconst userPrefersDarkMode = () => {\n  return (\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n};\n\nexport const useDarkMode = () => {\n  const [isDarkMode, setIsDarkMode] = useRememberedState(\n    ConfigKeys.DARK_MODE,\n    userPrefersDarkMode(),\n  );\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('mode-dark');\n    } else {\n      document.documentElement.classList.remove('mode-dark');\n    }\n  }, [isDarkMode]);\n\n  return useMemo(\n    () => ({\n      isDarkMode,\n      toggleDarkMode() {\n        setIsDarkMode(v => !v);\n      },\n    }),\n    [isDarkMode, setIsDarkMode],\n  );\n};\n","import React, { createContext, useContext, useMemo } from 'react';\nimport { useSelectedRepos } from './useSelectedRepos';\nimport { useAuth } from './useAuth';\nimport { useLabels } from './useLabels';\nimport { useDarkMode } from './useDarkMode';\n\nconst ConfigContext = createContext();\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const ConfigController = ({ children }) => {\n  const auth = useAuth();\n  const selectedRepos = useSelectedRepos();\n  const labels = useLabels();\n  const darkMode = useDarkMode();\n\n  const config = useMemo(() => ({ auth, selectedRepos, labels, darkMode }), [\n    auth,\n    selectedRepos,\n    labels,\n    darkMode,\n  ]);\n\n  return (\n    <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n  );\n};\n","import { ConfigKeys } from './ConfigKeys';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { useMemo } from 'react';\n\nexport const useAuth = () => {\n  const [token, setToken] = useRememberedState(ConfigKeys.AUTH, '');\n\n  return useMemo(\n    () => ({\n      token,\n      setToken,\n    }),\n    [token, setToken],\n  );\n};\n","import { useMemo } from 'react';\nimport { useRememberedState } from '../../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigKeys';\nimport { mapToGroups } from '../../helpers/mapToGroups';\n\nexport const useSelectedRepos = () => {\n  const [repos, setRepos] = useRememberedState(ConfigKeys.SELECTED_REPOS, []);\n\n  const groupedRepos = useMemo(\n    () => mapToGroups(repos, repo => repo.owner.login),\n    [repos],\n  );\n\n  const repoKeys = useMemo(() => repos.map(repo => repo.nameWithOwner), [\n    repos,\n  ]);\n\n  return useMemo(\n    () => ({\n      repos,\n      groupedRepos,\n      repoKeys,\n\n      containsRepo(repo) {\n        return repoKeys.includes(repo.nameWithOwner);\n      },\n\n      addRepo(repo) {\n        setRepos(rs => [...rs, repo]);\n      },\n\n      removeRepo(repo) {\n        setRepos(rs => rs.filter(r => r.nameWithOwner !== repo.nameWithOwner));\n      },\n    }),\n    [repos, groupedRepos, repoKeys, setRepos],\n  );\n};\n","export const mapToGroups = (arr, keyGetter) =>\n  arr.reduce((acc, item, index) => {\n    const key = keyGetter(item, index);\n\n    if (acc[key]) {\n      acc[key].push(item);\n    } else {\n      acc[key] = [item];\n    }\n\n    return acc;\n  }, {});\n","import React, { useMemo } from 'react';\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useConfig } from './components/ConfigController/ConfigController';\n\nexport const Apollo = ({ children }) => {\n  const {\n    auth: { token },\n  } = useConfig();\n\n  const cache = useMemo(() => new InMemoryCache(), []);\n  const link = useMemo(\n    () =>\n      new HttpLink({\n        uri: 'https://api.github.com/graphql',\n        headers: {\n          authorization: `bearer ${token}`,\n        },\n      }),\n    [token],\n  );\n\n  const client = useMemo(() => new ApolloClient({ link, cache }), [\n    link,\n    cache,\n  ]);\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n","import { useMemo } from 'react';\n\nexport const useTailwind = styleSheet => {\n  return useMemo(() => {\n    return Object.entries(styleSheet).reduce((acc, [key, styles]) => {\n      acc[key] = Array.isArray(styles) ? styles.join(' ') : styles;\n\n      return acc;\n    }, {});\n  }, [styleSheet]);\n};\n","import React from 'react';\nimport { useStyles } from './Layout.styles';\n\nexport const Layout = ({ children }) => {\n  const styles = useStyles();\n\n  return <div className={styles.container}>{children}</div>;\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n      px-8 max-w-5xl mx-auto h-full\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst USER_REPOS = gql`\n  {\n    viewer {\n      repositories(\n        first: 12\n        affiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        ownerAffiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]\n        orderBy: { field: UPDATED_AT, direction: DESC }\n      ) {\n        nodes {\n          name\n          nameWithOwner\n          owner {\n            login\n            avatarUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const useUserRepos = () => {\n  const { data, ...rest } = useQuery(USER_REPOS);\n\n  return {\n    data,\n    repos: data ? data.viewer.repositories.nodes : null,\n    ...rest,\n  };\n};\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { useStyles } from './RepoList.styles';\n\nimport './RepoList.css';\n\nexport const RepoList = ({ repos, onRepoClick = null, removable = false }) => {\n  const styles = useStyles();\n\n  return (\n    <TransitionGroup className={styles.repos}>\n      {repos.map(repo => (\n        <CSSTransition key={repo.nameWithOwner} timeout={200} classNames=\"item\">\n          <button\n            className={styles.repo}\n            onClick={onRepoClick ? onRepoClick(repo) : null}\n          >\n            <div className={styles.imageContainer}>\n              <img\n                src={repo.owner.avatarUrl}\n                className={styles.image}\n                alt={repo.nameWithOwner}\n              />\n\n              {removable ? (\n                <div className={styles.removeOverlay}>\n                  <p className={styles.removeIcon}>✕</p>\n                </div>\n              ) : null}\n            </div>\n            <p className={styles.text}>{repo.nameWithOwner}</p>\n          </button>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    repos: `\n        flex flex-row items-center justify-center flex-wrap mb-4\n    `,\n\n    repo: `\n        bg-gray-400 dark:bg-gray-800\n        focus:bg-purple-300 dark-focus:bg-purple-800\n        text-gray-800 dark:text-gray-400\n        focus:text-purple-800 dark-focus:text-purple-300\n        inline-block whitespace-no-wrap\n        m-1 rounded-full p-1 pr-3\n        flex flex-row items-center\n\n        hover:bg-gray-500\n        focus:outline-none\n    `,\n\n    imageContainer: `\n        relative mr-2 rounded-full overflow-hidden\n    `,\n\n    removeOverlay: `\n        absolute top-0 bottom-0 right-0 left-0\n        bg-gray-600\n        flex items-center justify-center\n        opacity-75\n    `,\n\n    removeIcon: 'text-gray-200 text-xs leading-none',\n\n    image: `\n        w-6 h-6\n    `,\n\n    text: `\n        text-sm leading-none font-semibold\n    `,\n  });\n","import React from 'react';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport { useStyles } from './RepoPickrToggle.styles';\n\nexport const RepoPickerToggle = ({ open, selectedCount, onClick }) => {\n  const styles = useStyles();\n  const text =\n    selectedCount === 0 && !open\n      ? 'Click to select repositories you want to see'\n      : ` ${selectedCount === 1 ? 'repository' : 'repositories'} selected`;\n\n  return (\n    <button className={styles.button} onClick={onClick}>\n      <div className={[styles.icon, open ? styles.open : null]}>\n        <ExpandLess />\n      </div>\n      <div>\n        <span className={styles.count}>\n          {open ? selectedCount : selectedCount || ''}\n        </span>\n        {text}\n      </div>\n    </button>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    button: `\n      py-2 px-1 mr-8\n      border-b border-t border-gray-400 dark:border-gray-850\n      text-gray-800 dark:text-white text-sm leading-loose\n      flex justify-between w-full\n      focus:outline-none\n    `,\n    icon: `\n      transition transition-transform duration-200 ease-in-out\n      transform rotate-90\n    `,\n    open: `\n       rotate-180\n    `,\n    count: `\n       font-bold\n    `,\n  });\n","import React from 'react';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './DarkModeToggle.styles';\n\nexport const DarkModeToggle = () => {\n  const { darkMode } = useConfig();\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <WbSunnyIcon className={styles.icon} fontSize=\"small\" />\n      <button\n        onClick={() => darkMode.toggleDarkMode()}\n        className={styles.switch}\n      >\n        <div\n          className={[\n            styles.knob,\n            darkMode.isDarkMode ? styles.knobActive : styles.knobInactive,\n          ]}\n        />\n      </button>\n      <Brightness3Icon className={styles.icon} fontSize=\"small\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center justify-end\n    `,\n\n    icon: `\n        text-gray-600\n    `,\n\n    switch: `\n        bg-gray-400 dark:bg-gray-800\n        box-content\n        border-2 border-gray-400 dark:border-gray-800\n        w-12 h-6 rounded-full\n        relative\n        focus:outline-none\n        transition-shadow duration-200\n        active:shadow\n        mx-2\n    `,\n\n    knob: `\n        w-6 h-6 rounded-full\n        bg-gray-200 dark:bg-gray-700\n        absolute top-0 left-1/2\n        transition-transform duration-200\n        transform translate-x-0\n    `,\n\n    knobInactive: `\n        -translate-x-full\n    `,\n  });\n","import React from 'react';\nimport { useUserRepos } from '../hooks/queries/useUserRepos';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { RepoList } from './RepoList';\nimport { useStyles } from './RepoPicker.styles';\nimport { RepoPickerToggle } from './RepoPickerToggle';\nimport { CSSTransition } from 'react-transition-group';\nimport { useRememberedState } from '../hooks/useRememberedState';\nimport { ConfigKeys } from './ConfigController/ConfigKeys';\n\nimport './RepoPicker.css';\nimport { DarkModeToggle } from './DarkModeToggle';\n\nexport const RepoPicker = ({ onChoose }) => {\n  const { loading, repos, error } = useUserRepos();\n  const { selectedRepos } = useConfig();\n  const [open, setOpen] = useRememberedState(ConfigKeys.REPO_PICKER_OPEN, true);\n  const styles = useStyles();\n\n  const handleChoose = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.addRepo(repo);\n  };\n\n  const removeRepo = repo => e => {\n    e.preventDefault();\n\n    selectedRepos.removeRepo(repo);\n  };\n\n  return (\n    <>\n      <div className={styles.barWrapper}>\n        <RepoPickerToggle\n          open={open}\n          selectedCount={selectedRepos.repos.length}\n          onClick={() => setOpen(o => !o)}\n        />\n        <DarkModeToggle />\n      </div>\n      <CSSTransition in={open} timeout={200} classNames=\"picker\" unmountOnExit>\n        <div className={styles.container}>\n          <p className={styles.text}>\n            Get started by picking some repos you want to see:\n          </p>\n          {loading ? (\n            <p>Loading...</p>\n          ) : error ? (\n            <p>something went wrong...</p>\n          ) : (\n            <>\n              <RepoList\n                repos={repos.filter(r => !selectedRepos.containsRepo(r))}\n                onRepoClick={handleChoose}\n              />\n\n              {selectedRepos.repos.length > 0 ? (\n                <>\n                  <p className={styles.text}>Selected:</p>\n                  <RepoList\n                    repos={selectedRepos.repos}\n                    onRepoClick={removeRepo}\n                    removable\n                  />\n                </>\n              ) : null}\n            </>\n          )}\n        </div>\n      </CSSTransition>\n    </>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    barWrapper: `\n      flex flex-row mb-8 pt-4\n    `,\n\n    container: `-mt-4 mb-12`,\n\n    text: `\n        mb-2 text-gray-900 dark:text-gray-500 font-light\n        leading-none\n    `,\n  });\n","import React, { useState } from 'react';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './TokenGate.styles';\n\nexport const TokenGate = ({ children }) => {\n  const { auth } = useConfig();\n  const styles = useStyles();\n\n  const [token, setToken] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    auth.setToken(token);\n  };\n\n  return auth.token ? (\n    children\n  ) : (\n    <div className={styles.container}>\n      <p className={styles.text}>\n        Welcome! Before you can get started, you need to supply us with a\n        Personal Access Token so we can see your repositories.\n        <br />\n        <a\n          href=\"https://github.com/settings/tokens/new?scopes=repo&description=git-dash\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={styles.link}\n        >\n          Click here to generate one on Github.\n        </a>\n      </p>\n\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          value={token}\n          onChange={e => setToken(e.target.value)}\n          placeholder=\"Paste PAT Here\"\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.button}>\n          Go\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-col items-center justify-center h-full\n    `,\n\n    text: `\n        text-center max-w-md\n        text-gray-800 mb-4\n        dark:text-gray-600\n    `,\n\n    link: `\n        text-purple-600 font-semibold\n    `,\n\n    form: `\n        shadow-lg rounded\n    `,\n\n    input: `\n        w-56 h-12 px-4 rounded-l\n        border border-r-0\n        border-gray-400 dark:border-gray-750\n        bg-gray-100 dark:bg-gray-600\n        focus:outline-none\n        focus:border-purple-600\n        placeholder-gray-500\n        text-gray-800 dark:text-gray-400\n    `,\n\n    button: `\n        h-12 px-4 bg-purple-600 text-purple-100 rounded-r\n        border border-purple-800 border-l-0\n    `,\n  });\n","import { useMemo } from 'react';\n\nconst hexToRgb = hex => {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const fullHex = hex.replace(shorthandRegex, (m, r, g, b) =>\n    [r, r, g, g, b, b].join(''),\n  );\n\n  const [, r, g, b] = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHex);\n\n  return [r, g, b].map(n => parseInt(n, 16));\n};\n\nexport const getContrastingColor = color => {\n  const [r, g, b] = hexToRgb(color);\n\n  const o = Math.round((r * 299 + g * 587 + b * 114) / 1000);\n  return o > 125 ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.9)';\n};\n\nexport const useContrastingColor = color =>\n  useMemo(() => {\n    return getContrastingColor(color);\n  }, [color]);\n","import { useEffect } from 'react';\n\n// converts a single ref, element or array into\n// an array of corresponding elements\nconst toEls = refsOrRef => {\n  const refs = Array.isArray(refsOrRef) ? refsOrRef : [refsOrRef];\n\n  const toEl = ref => (ref instanceof HTMLElement || !ref ? ref : ref.current);\n\n  return refs.map(toEl);\n};\n\n// `ref` is either a single ref, element or an array of either\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const els = toEls(ref);\n\n    const handleClick = e => {\n      const contained = els.some(el => {\n        return el && el.contains(e.target);\n      });\n\n      if (!contained) {\n        handler(e);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [ref, handler]);\n};\n","import React, { useState, useRef, useCallback } from 'react';\nimport { getContrastingColor } from '../../hooks/useContrastingColor';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useStyles } from './Label.styles';\n\nexport const Label = ({ label, buttons = null, IconComponent }) => {\n  const styles = useStyles();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltip = useRef();\n\n  useOnClickOutside(\n    tooltip,\n    useCallback(() => {\n      setShowTooltip(false);\n    }, []),\n  );\n\n  return (\n    <div className={styles.container}>\n      <button\n        onClick={() => setShowTooltip(true)}\n        disabled={!buttons}\n        className={styles.tag}\n        style={{\n          background: `#${label.color}`,\n          color: getContrastingColor(label.color),\n        }}\n      >\n        {IconComponent ? (\n          <IconComponent className={styles.icon} style={{ fontSize: 12 }} />\n        ) : null}\n        {label.name}\n      </button>\n\n      <div\n        ref={tooltip}\n        className={styles.tooltipWrapper}\n        style={{\n          transform: 'translateX(-50%)',\n          display: showTooltip && buttons ? 'block' : 'none',\n        }}\n      >\n        {buttons ? (\n          <div className={styles.tooltip}>\n            {buttons({\n              className: styles.button,\n              label,\n              hideTooltip() {\n                setShowTooltip(false);\n              },\n            })}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        relative mr-1\n    `,\n\n    tag: `\n        leading-none text-xs px-2 py-1\n        rounded-full font-semibold\n        shadow-inner\n        focus:outline-none\n        focus:opacity-75\n        hover:shadow\n        flex items-center\n    `,\n\n    icon: `\n        mr-1\n    `,\n\n    tooltipWrapper: `\n        absolute bottom-full left-1/2 pb-1\n    `,\n\n    tooltip: `\n        bg-white dark:bg-gray-750 rounded\n        border border-gray-300 dark:border-gray-800\n        shadow-lg py-1 min-w-48 flex flex-col items-stretch\n    `,\n\n    button: `\n        lowercase whitespace-no-wrap\n        leading-none px-4 py-2 text-sm\n        text-gray-700 dark:text-gray-300\n        hover:bg-purple-300 hover:text-purple-800\n        dark-hover:bg-purple-600 dark-hover:text-purple-100\n        focus:outline-none\n        focus:bg-gray-200\n    `,\n  });\n","import React from 'react';\nimport { useStyles } from './Labels.styles';\nimport { Label } from './Label';\n\nexport const Labels = ({ labels, buttons = null }) => {\n  const styles = useStyles();\n\n  return (\n    <div className={styles.container}>\n      {labels.map(label => (\n        <Label key={label.name} label={label} buttons={buttons} />\n      ))}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row items-center\n    `,\n  });\n","import React from 'react';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\n\nexport const BuildStatus = ({ status }) => {\n  const Icon = {\n    SUCCESS: CheckRoundedIcon,\n    ERROR: CloseRoundedIcon,\n    FAILURE: CloseRoundedIcon,\n    PENDING: FiberManualRecordIcon,\n  }[status];\n\n  const colorClass = {\n    SUCCESS: 'text-green-600',\n    ERROR: 'text-red-600',\n    FAILURE: 'text-red-600',\n    PENDING: `text-yellow-600`,\n  }[status];\n\n  return Icon ? (\n    <span className={`ml-1 -mt-px ${colorClass}`}>\n      <Icon fontSize=\"small\" />\n    </span>\n  ) : null;\n}","import React from 'react';\nimport ChatBubbleRoundedIcon from '@material-ui/icons/ChatBubbleRounded';\nimport RateReviewRoundedIcon from '@material-ui/icons/RateReviewRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport AccessTimeRoundedIcon from '@material-ui/icons/AccessTimeRounded';\nimport MoodBadRoundedIcon from '@material-ui/icons/MoodBadRounded';\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\nimport { useStyles } from './StatusIcon.styles';\n\nexport const StatusIcon = ({ status, offset = 0, last = false, ...props }) => {\n  const styles = useStyles();\n\n  const Icon =\n    {\n      COMMENTED: ChatBubbleRoundedIcon,\n      CHANGES_REQUESTED: RateReviewRoundedIcon,\n      APPROVED: CheckRoundedIcon,\n      PENDING: AccessTimeRoundedIcon,\n      DISMISSED: ClearRoundedIcon,\n    }[status] || MoodBadRoundedIcon;\n\n  const bgClass =\n    {\n      COMMENTED: `bg-white`,\n      CHANGES_REQUESTED: `bg-red-500`,\n      APPROVED: `bg-green-600`,\n      PENDING: `bg-yellow-500`,\n      DISMISSED: `bg-purple-600`,\n    }[status] || `bg-gray-400`;\n\n  const textClass =\n    {\n      COMMENTED: `text-gray-600`,\n      CHANGES_REQUESTED: `text-red-100`,\n      APPROVED: `text-green-100`,\n      PENDING: `text-yellow-900`,\n      DISMISSED: `text-purple-100`,\n    }[status] || `text-gray-700`;\n\n  const title =\n    {\n      COMMENTED: `Commented`,\n      CHANGES_REQUESTED: `Changes Requested`,\n      APPROVED: `Approved`,\n      PENDING: `Pending`,\n      DISMISSED: 'Dismissed',\n    }[status] || `Unknown Status '${status}'`;\n\n  const leftOffset = 0.75 + offset * (last ? 0.5 : 0.4);\n\n  return (\n    <div\n      className={`${bgClass} ${textClass} ${styles.container}`}\n      style={{\n        left: `${leftOffset}rem`,\n        bottom: '-.75rem',\n        transform: !last ? 'scale(0.8)' : '',\n      }}\n      title={title}\n    >\n      <Icon className={styles.icon} fontSize=\"inherit\" />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        w-8 h-8 absolute\n        flex items-center justify-center\n        rounded-full shadow-lg\n    `,\n\n    icon: `\n        leading-none font-xs\n    `,\n  });\n","import React, { useMemo } from 'react';\nimport { StatusIcon } from './StatusIcon';\nimport { useStyles } from './Reviews.styles';\n\nexport const Reviews = ({ reviews }) => {\n  const styles = useStyles();\n\n  const reviewsGroupedByUser = useMemo(() => {\n    return Object.values(\n      reviews.reduce((acc, review) => {\n        if (!acc[review.author.login]) {\n          acc[review.author.login] = {\n            author: review.author,\n            reviews: [],\n          };\n        }\n\n        // Ignore comments\n        if (review.state !== 'COMMENTED') {\n          acc[review.author.login].reviews.push(review);\n        }\n\n        return acc;\n      }, {}),\n    ).filter((group) => group.reviews.length > 0);\n  }, [reviews]);\n\n  return (\n    <>\n      <div className={styles.reviews}>\n        {reviewsGroupedByUser.map(({ author, reviews }) => (\n          <div className={styles.review} key={author.login}>\n            <img\n              src={author.avatarUrl}\n              alt={author.login}\n              className={styles.reviewerAvatar}\n            />\n\n            <div>\n              {reviews.map((review, i) => (\n                <StatusIcon\n                  key={review.id}\n                  status={review.state}\n                  offset={i}\n                  last={i === reviews.length - 1}\n                />\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    reviews: `\n        flex flex-row mt-3\n    `,\n\n    review: `\n        relative mr-4\n    `,\n\n    reviewerAvatar: `\n        w-10 h-10 rounded-full\n        shadow\n    `,\n\n    reviewStatus: `\n        absolute\n    `,\n  });\n","import React, { useMemo } from 'react';\nimport { parseISO, format } from 'date-fns';\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { useStyles } from './PullRequest.styles';\nimport { Labels } from './Labels';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { BuildStatus } from './BuildStatus';\nimport { Reviews } from './Reviews';\nimport { Label } from './Label';\n\nexport const PullRequest = ({ pullRequest }) => {\n  const styles = useStyles();\n  const { labels } = useConfig();\n\n  const created = format(parseISO(pullRequest.createdAt), 'do MMM HH:mm');\n  const updated = format(parseISO(pullRequest.updatedAt), 'do MMM HH:mm');\n\n  const buildStatus = useMemo(() => {\n    const { nodes } = pullRequest.commits;\n    const { commit } = nodes[nodes.length - 1] || { commit: null };\n\n    return commit && commit.statusCheckRollup\n      ? commit.statusCheckRollup.state\n      : null;\n  }, [pullRequest]);\n\n  return (\n    <div className={styles.pullRequest} key={pullRequest.id}>\n      <div className={styles.titleBar}>\n        <div>\n          <div className={styles.preTitle}>\n            <div className={styles.owner}>\n              <img\n                src={pullRequest.repository.owner.avatarUrl}\n                alt={pullRequest.repository.nameWithOwner}\n                className={styles.ownerAvatar}\n              />\n              <p className={styles.repo}>\n                {pullRequest.repository.nameWithOwner}\n              </p>\n            </div>\n\n            {pullRequest.isDraft && (\n              <Label\n                label={{ name: 'draft', color: 'CBD5E0' }}\n                IconComponent={AccessTimeIcon}\n              />\n            )}\n\n            <Labels\n              labels={pullRequest.labels.nodes}\n              buttons={({ className, label, hideTooltip }) => {\n                const inWhitelist = labels.listHasLabel(\n                  labels.whitelist,\n                  label,\n                );\n                const inBlacklist = labels.listHasLabel(\n                  labels.blacklist,\n                  label,\n                );\n\n                return (\n                  <>\n                    <button\n                      className={className}\n                      onClick={() => {\n                        if (inWhitelist) {\n                          labels.removeFromWhitelist(label);\n                        } else {\n                          labels.addToWhitelist(label);\n                        }\n                        hideTooltip();\n                      }}\n                    >\n                      {inWhitelist ? 'remove from' : 'add to'} whitelist\n                    </button>\n                    <button\n                      className={className}\n                      onClick={() => {\n                        if (inBlacklist) {\n                          labels.removeFromBlacklist(label);\n                        } else {\n                          labels.addToBlacklist(label);\n                        }\n                        hideTooltip();\n                      }}\n                    >\n                      {inBlacklist ? 'remove from' : 'add to'} blacklist\n                    </button>\n                  </>\n                );\n              }}\n            />\n          </div>\n          <a\n            className={styles.title}\n            href={pullRequest.permalink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {pullRequest.title}\n          </a>\n        </div>\n\n        <div className={styles.author}>\n          <img\n            src={pullRequest.author.avatarUrl}\n            alt={pullRequest.author.login}\n            className={styles.authorAvatar}\n          />\n          <p className={styles.authorName}>{pullRequest.author.login}</p>\n        </div>\n      </div>\n\n      <p className={styles.branches}>\n        <span>{pullRequest.baseRefName}</span>\n        <ArrowLeftRoundedIcon />\n        <span>{pullRequest.headRefName}</span>\n      </p>\n\n      <p className={styles.timestamps}>\n        created {created}, last updated {updated}\n        <BuildStatus status={buildStatus} />\n      </p>\n\n      <Reviews reviews={pullRequest.reviews.nodes} />\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequest: `\n        p-6\n        border-b border-gray-300 dark:border-gray-750\n        last:border-b-0\n    `,\n\n    preTitle: `\n        flex flex-row items-center mb-1\n    `,\n\n    owner: `\n        flex flex-row items-center\n    `,\n\n    ownerAvatar: `\n        w-6 h-6 rounded-full shadow mr-1\n    `,\n\n    repo: `\n        text-base text-gray-800 dark:text-gray-500 leading-none mr-2\n    `,\n\n    titleBar: `\n        flex flex-row justify-between items-center mb-1\n    `,\n\n    title: `\n        text-gray-900 font-semibold text-lg\n        dark:text-gray-300\n        block p-1 -mx-1\n    `,\n\n    author: `\n        inline-flex flex-row items-center\n        relative\n        bg-gray-400 dark:bg-gray-850\n        rounded-full py-2 pl-3 pr-12\n        shadow-inner\n    `,\n\n    authorAvatar: `\n        w-10 h-10 rounded-full\n        absolute right-0\n        shadow\n    `,\n\n    authorName: `\n        text-sm leading-none whitespace-no-wrap\n        text-gray-900 dark:text-gray-400\n    `,\n\n    timestamps: `\n        text-sm leading-none text-gray-700 dark:text-gray-500\n        pointer-events-none\n    `,\n\n    branches: `\n        inline-flex flex-row items-center\n        text-xs px-2 mb-2 rounded\n        bg-gray-300 text-gray-800\n        dark:bg-gray-500 dark:text-gray-900\n    `,\n  });\n","import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_PULL_REQUESTS = gql`\n  query PullRequests($query: String!, $limit: Int!) {\n    search(query: $query, type: ISSUE, last: $limit) {\n      nodes {\n        ... on PullRequest {\n          id\n          title\n          createdAt\n          updatedAt\n          permalink\n          isDraft\n          baseRefName\n          headRefName\n          author {\n            login\n            avatarUrl\n          }\n          repository {\n            nameWithOwner\n            owner {\n              avatarUrl\n            }\n          }\n          labels(first: 15) {\n            nodes {\n              name\n              color\n            }\n          }\n          reviews(last: 100) {\n            nodes {\n              id\n              createdAt\n              state\n              author {\n                login\n                avatarUrl\n              }\n            }\n          }\n          commits(last: 1) {\n            nodes {\n              commit {\n                statusCheckRollup {\n                  state\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const usePullRequests = (query, limit) => {\n  const { data, ...rest } = useQuery(GET_PULL_REQUESTS, {\n    variables: { query, limit },\n    pollInterval: 30000,\n  });\n\n  return {\n    data,\n    pullRequests: data ? data.search.nodes : null,\n    ...rest,\n  };\n};\n","import React, { useMemo } from 'react';\nimport { useConfig } from '../ConfigController/ConfigController';\nimport { FilterModes } from '../ConfigController/useLabels';\nimport { PullRequest } from './PullRequest';\nimport { useStyles } from './PullRequests.styles';\nimport { usePullRequests } from '../../hooks/queries/usePullRequests';\n\nexport const PullRequests = () => {\n  const { selectedRepos, labels } = useConfig();\n  const styles = useStyles();\n\n  const limit = selectedRepos.repos.length < 1 ? 10 : 100;\n\n  const query = useMemo(() => {\n    const repoQuery = selectedRepos.repos\n      .map((r) => `repo:${r.nameWithOwner}`)\n      .join(' ');\n\n    const labelQuery = labels.filterEnabled\n      ? labels.filterMode === FilterModes.BLACKLIST\n        ? labels.blacklist.map((label) => `-label:\"${label.name}\"`).join(' ')\n        : labels.whitelist.map((label) => `label:\"${label.name}\"`).join(' ')\n      : '';\n\n    return `is:pr is:open ${repoQuery} ${labelQuery}`;\n  }, [selectedRepos.repos, labels]);\n\n  const { loading, error, pullRequests } = usePullRequests(query, limit);\n\n  return loading ? (\n    <p>Loading...</p>\n  ) : error ? (\n    <p>Something went wrong...</p>\n  ) : (\n    <div className={styles.pullRequests}>\n      {pullRequests.length > 0 ? (\n        pullRequests.map((pullRequest) => (\n          <PullRequest pullRequest={pullRequest} key={pullRequest.id} />\n        ))\n      ) : (\n        <div className={styles.empty}>\n          <p className={styles.emptyText}>No open pull requests.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useTailwind } from '../../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    pullRequests: `\n        bg-gray-100 dark:bg-gray-800\n        border-gray-300 dark:border-gray-750\n        mb-4 shadow-sm rounded border\n    `,\n\n    empty: `\n      text-center p-8\n    `,\n\n    emptyText: `\n      text-gray-700 dark:text-gray-500\n    `,\n  });\n","import React from 'react';\nimport { Labels } from './PullRequests/Labels';\nimport { useConfig } from './ConfigController/ConfigController';\nimport { useStyles } from './LabelFilters.styles';\nimport { FilterModes } from './ConfigController/useLabels';\n\nexport const LabelFilters = () => {\n  const { labels } = useConfig();\n  const {\n    filterMode,\n    filterList,\n    removeFromWhitelist,\n    removeFromBlacklist,\n    toggleFilterMode,\n    filterEnabled,\n    toggleFilter,\n  } = labels;\n  const styles = useStyles();\n\n  const listEmpty = filterList.length < 1;\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.selected}>\n          {filterEnabled ? (\n            <>\n              <p className={styles.selectedLabel}>\n                {filterMode === FilterModes.WHITELIST\n                  ? listEmpty\n                    ? 'no items in whitelist'\n                    : 'showing only'\n                  : listEmpty\n                  ? 'no items in blacklist'\n                  : 'hiding'}\n              </p>\n              <Labels\n                labels={filterList}\n                buttons={({ className, label }) => (\n                  <button\n                    className={className}\n                    onClick={() =>\n                      filterMode === FilterModes.WHITELIST\n                        ? removeFromWhitelist(label)\n                        : removeFromBlacklist(label)\n                    }\n                  >\n                    remove from {filterMode.toLowerCase()}\n                  </button>\n                )}\n              />\n            </>\n          ) : null}\n        </div>\n\n        <div>\n          {filterEnabled ? (\n            <button\n              className={styles.button}\n              onClick={() => toggleFilterMode()}\n            >\n              switch to{' '}\n              {filterMode === FilterModes.WHITELIST ? 'blacklist' : 'whitelist'}{' '}\n              mode\n            </button>\n          ) : null}\n          <button className={styles.button2} onClick={() => toggleFilter()}>\n            {filterEnabled ? 'disable' : 'enable'} filter\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useTailwind } from '../hooks/useTailwind';\n\nexport const useStyles = () =>\n  useTailwind({\n    container: `\n        flex flex-row justify-between items-end\n        w-full mb-2 px-1\n    `,\n\n    selected: `\n        flex flex-row items-center\n    `,\n\n    selectedLabel: `\n        -mb-px text-sm\n        mr-2 leading-none\n        text-gray-700 dark:text-gray-500\n    `,\n\n    button: `\n        text-sm\n        text-purple-600\n        focus:outline-none\n        active:font-semibold\n    `,\n\n    button2: `\n        text-sm ml-4\n        text-gray-700 dark:text-gray-500\n        focus:outline-none\n        active:font-semibold\n    `,\n  });\n","import React from 'react';\nimport { Apollo } from './Apollo';\nimport { Layout } from './components/Layout';\nimport { RepoPicker } from './components/RepoPicker';\nimport { ConfigController } from './components/ConfigController/ConfigController';\nimport { TokenGate } from './components/TokenGate';\nimport { PullRequests } from './components/PullRequests/PullRequests';\nimport { LabelFilters } from './components/LabelFilters';\n\nexport const App = () => {\n  return (\n    <ConfigController>\n      <Layout>\n        <TokenGate>\n          <Apollo>\n            <RepoPicker />\n\n            <LabelFilters />\n\n            <PullRequests />\n          </Apollo>\n        </TokenGate>\n      </Layout>\n    </ConfigController>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}